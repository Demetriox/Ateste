{"ast":null,"code":"import firebase from '@firebase/app';\nimport '@firebase/installations';\nimport { Component } from '@firebase/component';\nimport { __values, __spread, __awaiter, __generator, __assign } from 'tslib';\nimport { ErrorFactory } from '@firebase/util';\nimport { deleteDb, openDb } from 'idb';\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\nvar _a;\nvar ERROR_MAP = (_a = {}, _a[\"missing-app-config-values\" /* MISSING_APP_CONFIG_VALUES */] = 'Missing App configuration value: \"{$valueName}\"', _a[\"only-available-in-window\" /* AVAILABLE_IN_WINDOW */] = 'This method is available in a Window context.', _a[\"only-available-in-sw\" /* AVAILABLE_IN_SW */] = 'This method is available in a service worker context.', _a[\"permission-default\" /* PERMISSION_DEFAULT */] = 'The notification permission was not granted and dismissed instead.', _a[\"permission-blocked\" /* PERMISSION_BLOCKED */] = 'The notification permission was not granted and blocked instead.', _a[\"unsupported-browser\" /* UNSUPPORTED_BROWSER */] = \"This browser doesn't support the API's required to use the firebase SDK.\", _a[\"failed-service-worker-registration\" /* FAILED_DEFAULT_REGISTRATION */] = 'We are unable to register the default service worker. {$browserErrorMessage}', _a[\"token-subscribe-failed\" /* TOKEN_SUBSCRIBE_FAILED */] = 'A problem occured while subscribing the user to FCM: {$errorInfo}', _a[\"token-subscribe-no-token\" /* TOKEN_SUBSCRIBE_NO_TOKEN */] = 'FCM returned no token when subscribing the user to push.', _a[\"token-unsubscribe-failed\" /* TOKEN_UNSUBSCRIBE_FAILED */] = 'A problem occured while unsubscribing the ' + 'user from FCM: {$errorInfo}', _a[\"token-update-failed\" /* TOKEN_UPDATE_FAILED */] = 'A problem occured while updating the user from FCM: {$errorInfo}', _a[\"token-update-no-token\" /* TOKEN_UPDATE_NO_TOKEN */] = 'FCM returned no token when updating the user to push.', _a[\"use-sw-after-get-token\" /* USE_SW_AFTER_GET_TOKEN */] = 'The useServiceWorker() method may only be called once and must be ' + 'called before calling getToken() to ensure your service worker is used.', _a[\"invalid-sw-registration\" /* INVALID_SW_REGISTRATION */] = 'The input to useServiceWorker() must be a ServiceWorkerRegistration.', _a[\"invalid-bg-handler\" /* INVALID_BG_HANDLER */] = 'The input to setBackgroundMessageHandler() must be a function.', _a[\"invalid-vapid-key\" /* INVALID_VAPID_KEY */] = 'The public VAPID key must be a string.', _a[\"use-vapid-key-after-get-token\" /* USE_VAPID_KEY_AFTER_GET_TOKEN */] = 'The usePublicVapidKey() method may only be called once and must be ' + 'called before calling getToken() to ensure your VAPID key is used.', _a);\nvar ERROR_FACTORY = new ErrorFactory('messaging', 'Messaging', ERROR_MAP);\n\n/**\r\n * @license\r\n * Copyright 2019 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\nfunction extractAppConfig(app) {\n  var e_1, _a;\n  if (!app || !app.options) {\n    throw getMissingValueError('App Configuration Object');\n  }\n  if (!app.name) {\n    throw getMissingValueError('App Name');\n  }\n  // Required app config keys\n  var configKeys = ['projectId', 'apiKey', 'appId', 'messagingSenderId'];\n  var options = app.options;\n  try {\n    for (var configKeys_1 = __values(configKeys), configKeys_1_1 = configKeys_1.next(); !configKeys_1_1.done; configKeys_1_1 = configKeys_1.next()) {\n      var keyName = configKeys_1_1.value;\n      if (!options[keyName]) {\n        throw getMissingValueError(keyName);\n      }\n    }\n  } catch (e_1_1) {\n    e_1 = {\n      error: e_1_1\n    };\n  } finally {\n    try {\n      if (configKeys_1_1 && !configKeys_1_1.done && (_a = configKeys_1.return)) _a.call(configKeys_1);\n    } finally {\n      if (e_1) throw e_1.error;\n    }\n  }\n  return {\n    appName: app.name,\n    projectId: options.projectId,\n    apiKey: options.apiKey,\n    appId: options.appId,\n    senderId: options.messagingSenderId\n  };\n}\nfunction getMissingValueError(valueName) {\n  return ERROR_FACTORY.create(\"missing-app-config-values\" /* MISSING_APP_CONFIG_VALUES */, {\n    valueName: valueName\n  });\n}\n\n/**\r\n * @license\r\n * Copyright 2019 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\nvar DEFAULT_SW_PATH = '/firebase-messaging-sw.js';\nvar DEFAULT_SW_SCOPE = '/firebase-cloud-messaging-push-scope';\nvar DEFAULT_VAPID_KEY = 'BDOU99-h67HcA6JeFXHbSNMu7e2yNNu3RzoMj8TM4W88jITfq7ZmPvIM1Iv-4_l2LxQcYwhqby2xGpWwzjfAnG4';\nvar ENDPOINT = 'https://fcmregistrations.googleapis.com/v1';\n/** Key of FCM Payload in Notification's data field. */\nvar FCM_MSG = 'FCM_MSG';\nvar CONSOLE_CAMPAIGN_ID = 'google.c.a.c_id';\nvar CONSOLE_CAMPAIGN_NAME = 'google.c.a.c_l';\nvar CONSOLE_CAMPAIGN_TIME = 'google.c.a.ts';\n/** Set to '1' if Analytics is enabled for the campaign */\nvar CONSOLE_CAMPAIGN_ANALYTICS_ENABLED = 'google.c.a.e';\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\nvar MessageType;\n(function (MessageType) {\n  MessageType[\"PUSH_RECEIVED\"] = \"push-received\";\n  MessageType[\"NOTIFICATION_CLICKED\"] = \"notification-clicked\";\n})(MessageType || (MessageType = {}));\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\nfunction arrayToBase64(array) {\n  var uint8Array = new Uint8Array(array);\n  var base64String = btoa(String.fromCharCode.apply(String, __spread(uint8Array)));\n  return base64String.replace(/=/g, '').replace(/\\+/g, '-').replace(/\\//g, '_');\n}\nfunction base64ToArray(base64String) {\n  var padding = '='.repeat((4 - base64String.length % 4) % 4);\n  var base64 = (base64String + padding).replace(/\\-/g, '+').replace(/_/g, '/');\n  var rawData = atob(base64);\n  var outputArray = new Uint8Array(rawData.length);\n  for (var i = 0; i < rawData.length; ++i) {\n    outputArray[i] = rawData.charCodeAt(i);\n  }\n  return outputArray;\n}\n\n/**\r\n * @license\r\n * Copyright 2019 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\nvar OLD_DB_NAME = 'fcm_token_details_db';\n/**\r\n * The last DB version of 'fcm_token_details_db' was 4. This is one higher,\r\n * so that the upgrade callback is called for all versions of the old DB.\r\n */\nvar OLD_DB_VERSION = 5;\nvar OLD_OBJECT_STORE_NAME = 'fcm_token_object_Store';\nfunction migrateOldDatabase(senderId) {\n  return __awaiter(this, void 0, void 0, function () {\n    var databases, dbNames, tokenDetails, db;\n    var _this = this;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          if (!('databases' in indexedDB)) return [3 /*break*/, 2];\n          return [4 /*yield*/, indexedDB.databases()];\n        case 1:\n          databases = _a.sent();\n          dbNames = databases.map(function (db) {\n            return db.name;\n          });\n          if (!dbNames.includes(OLD_DB_NAME)) {\n            // old DB didn't exist, no need to open.\n            return [2 /*return*/, null];\n          }\n          _a.label = 2;\n        case 2:\n          tokenDetails = null;\n          return [4 /*yield*/, openDb(OLD_DB_NAME, OLD_DB_VERSION, function (db) {\n            return __awaiter(_this, void 0, void 0, function () {\n              var objectStore, value, oldDetails, oldDetails, oldDetails;\n              var _a;\n              return __generator(this, function (_b) {\n                switch (_b.label) {\n                  case 0:\n                    if (db.oldVersion < 2) {\n                      // Database too old, skip migration.\n                      return [2 /*return*/];\n                    }\n\n                    if (!db.objectStoreNames.contains(OLD_OBJECT_STORE_NAME)) {\n                      // Database did not exist. Nothing to do.\n                      return [2 /*return*/];\n                    }\n\n                    objectStore = db.transaction.objectStore(OLD_OBJECT_STORE_NAME);\n                    return [4 /*yield*/, objectStore.index('fcmSenderId').get(senderId)];\n                  case 1:\n                    value = _b.sent();\n                    return [4 /*yield*/, objectStore.clear()];\n                  case 2:\n                    _b.sent();\n                    if (!value) {\n                      // No entry in the database, nothing to migrate.\n                      return [2 /*return*/];\n                    }\n\n                    if (db.oldVersion === 2) {\n                      oldDetails = value;\n                      if (!oldDetails.auth || !oldDetails.p256dh || !oldDetails.endpoint) {\n                        return [2 /*return*/];\n                      }\n\n                      tokenDetails = {\n                        token: oldDetails.fcmToken,\n                        createTime: (_a = oldDetails.createTime) !== null && _a !== void 0 ? _a : Date.now(),\n                        subscriptionOptions: {\n                          auth: oldDetails.auth,\n                          p256dh: oldDetails.p256dh,\n                          endpoint: oldDetails.endpoint,\n                          swScope: oldDetails.swScope,\n                          vapidKey: typeof oldDetails.vapidKey === 'string' ? oldDetails.vapidKey : arrayToBase64(oldDetails.vapidKey)\n                        }\n                      };\n                    } else if (db.oldVersion === 3) {\n                      oldDetails = value;\n                      tokenDetails = {\n                        token: oldDetails.fcmToken,\n                        createTime: oldDetails.createTime,\n                        subscriptionOptions: {\n                          auth: arrayToBase64(oldDetails.auth),\n                          p256dh: arrayToBase64(oldDetails.p256dh),\n                          endpoint: oldDetails.endpoint,\n                          swScope: oldDetails.swScope,\n                          vapidKey: arrayToBase64(oldDetails.vapidKey)\n                        }\n                      };\n                    } else if (db.oldVersion === 4) {\n                      oldDetails = value;\n                      tokenDetails = {\n                        token: oldDetails.fcmToken,\n                        createTime: oldDetails.createTime,\n                        subscriptionOptions: {\n                          auth: arrayToBase64(oldDetails.auth),\n                          p256dh: arrayToBase64(oldDetails.p256dh),\n                          endpoint: oldDetails.endpoint,\n                          swScope: oldDetails.swScope,\n                          vapidKey: arrayToBase64(oldDetails.vapidKey)\n                        }\n                      };\n                    }\n                    return [2 /*return*/];\n                }\n              });\n            });\n          })];\n\n        case 3:\n          db = _a.sent();\n          db.close();\n          // Delete all old databases.\n          return [4 /*yield*/, deleteDb(OLD_DB_NAME)];\n        case 4:\n          // Delete all old databases.\n          _a.sent();\n          return [4 /*yield*/, deleteDb('fcm_vapid_details_db')];\n        case 5:\n          _a.sent();\n          return [4 /*yield*/, deleteDb('undefined')];\n        case 6:\n          _a.sent();\n          return [2 /*return*/, checkTokenDetails(tokenDetails) ? tokenDetails : null];\n      }\n    });\n  });\n}\nfunction checkTokenDetails(tokenDetails) {\n  if (!tokenDetails || !tokenDetails.subscriptionOptions) {\n    return false;\n  }\n  var subscriptionOptions = tokenDetails.subscriptionOptions;\n  return typeof tokenDetails.createTime === 'number' && tokenDetails.createTime > 0 && typeof tokenDetails.token === 'string' && tokenDetails.token.length > 0 && typeof subscriptionOptions.auth === 'string' && subscriptionOptions.auth.length > 0 && typeof subscriptionOptions.p256dh === 'string' && subscriptionOptions.p256dh.length > 0 && typeof subscriptionOptions.endpoint === 'string' && subscriptionOptions.endpoint.length > 0 && typeof subscriptionOptions.swScope === 'string' && subscriptionOptions.swScope.length > 0 && typeof subscriptionOptions.vapidKey === 'string' && subscriptionOptions.vapidKey.length > 0;\n}\n\n/**\r\n * @license\r\n * Copyright 2019 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n// Exported for tests.\nvar DATABASE_NAME = 'firebase-messaging-database';\nvar DATABASE_VERSION = 1;\nvar OBJECT_STORE_NAME = 'firebase-messaging-store';\nvar dbPromise = null;\nfunction getDbPromise() {\n  if (!dbPromise) {\n    dbPromise = openDb(DATABASE_NAME, DATABASE_VERSION, function (upgradeDb) {\n      // We don't use 'break' in this switch statement, the fall-through\n      // behavior is what we want, because if there are multiple versions between\n      // the old version and the current version, we want ALL the migrations\n      // that correspond to those versions to run, not only the last one.\n      // eslint-disable-next-line default-case\n      switch (upgradeDb.oldVersion) {\n        case 0:\n          upgradeDb.createObjectStore(OBJECT_STORE_NAME);\n      }\n    });\n  }\n  return dbPromise;\n}\n/** Gets record(s) from the objectStore that match the given key. */\nfunction dbGet(firebaseDependencies) {\n  return __awaiter(this, void 0, void 0, function () {\n    var key, db, tokenDetails, oldTokenDetails;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          key = getKey(firebaseDependencies);\n          return [4 /*yield*/, getDbPromise()];\n        case 1:\n          db = _a.sent();\n          return [4 /*yield*/, db.transaction(OBJECT_STORE_NAME).objectStore(OBJECT_STORE_NAME).get(key)];\n        case 2:\n          tokenDetails = _a.sent();\n          if (!tokenDetails) return [3 /*break*/, 3];\n          return [2 /*return*/, tokenDetails];\n        case 3:\n          return [4 /*yield*/, migrateOldDatabase(firebaseDependencies.appConfig.senderId)];\n        case 4:\n          oldTokenDetails = _a.sent();\n          if (!oldTokenDetails) return [3 /*break*/, 6];\n          return [4 /*yield*/, dbSet(firebaseDependencies, oldTokenDetails)];\n        case 5:\n          _a.sent();\n          return [2 /*return*/, oldTokenDetails];\n        case 6:\n          return [2 /*return*/];\n      }\n    });\n  });\n}\n/** Assigns or overwrites the record for the given key with the given value. */\nfunction dbSet(firebaseDependencies, tokenDetails) {\n  return __awaiter(this, void 0, void 0, function () {\n    var key, db, tx;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          key = getKey(firebaseDependencies);\n          return [4 /*yield*/, getDbPromise()];\n        case 1:\n          db = _a.sent();\n          tx = db.transaction(OBJECT_STORE_NAME, 'readwrite');\n          return [4 /*yield*/, tx.objectStore(OBJECT_STORE_NAME).put(tokenDetails, key)];\n        case 2:\n          _a.sent();\n          return [4 /*yield*/, tx.complete];\n        case 3:\n          _a.sent();\n          return [2 /*return*/, tokenDetails];\n      }\n    });\n  });\n}\n/** Removes record(s) from the objectStore that match the given key. */\nfunction dbRemove(firebaseDependencies) {\n  return __awaiter(this, void 0, void 0, function () {\n    var key, db, tx;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          key = getKey(firebaseDependencies);\n          return [4 /*yield*/, getDbPromise()];\n        case 1:\n          db = _a.sent();\n          tx = db.transaction(OBJECT_STORE_NAME, 'readwrite');\n          return [4 /*yield*/, tx.objectStore(OBJECT_STORE_NAME).delete(key)];\n        case 2:\n          _a.sent();\n          return [4 /*yield*/, tx.complete];\n        case 3:\n          _a.sent();\n          return [2 /*return*/];\n      }\n    });\n  });\n}\n\nfunction getKey(_a) {\n  var appConfig = _a.appConfig;\n  return appConfig.appId;\n}\n\n/**\r\n * @license\r\n * Copyright 2019 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\nfunction requestGetToken(firebaseDependencies, subscriptionOptions) {\n  return __awaiter(this, void 0, void 0, function () {\n    var headers, body, subscribeOptions, responseData, response, err_1, message;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          return [4 /*yield*/, getHeaders(firebaseDependencies)];\n        case 1:\n          headers = _a.sent();\n          body = getBody(subscriptionOptions);\n          subscribeOptions = {\n            method: 'POST',\n            headers: headers,\n            body: JSON.stringify(body)\n          };\n          _a.label = 2;\n        case 2:\n          _a.trys.push([2, 5,, 6]);\n          return [4 /*yield*/, fetch(getEndpoint(firebaseDependencies.appConfig), subscribeOptions)];\n        case 3:\n          response = _a.sent();\n          return [4 /*yield*/, response.json()];\n        case 4:\n          responseData = _a.sent();\n          return [3 /*break*/, 6];\n        case 5:\n          err_1 = _a.sent();\n          throw ERROR_FACTORY.create(\"token-subscribe-failed\" /* TOKEN_SUBSCRIBE_FAILED */, {\n            errorInfo: err_1\n          });\n        case 6:\n          if (responseData.error) {\n            message = responseData.error.message;\n            throw ERROR_FACTORY.create(\"token-subscribe-failed\" /* TOKEN_SUBSCRIBE_FAILED */, {\n              errorInfo: message\n            });\n          }\n          if (!responseData.token) {\n            throw ERROR_FACTORY.create(\"token-subscribe-no-token\" /* TOKEN_SUBSCRIBE_NO_TOKEN */);\n          }\n\n          return [2 /*return*/, responseData.token];\n      }\n    });\n  });\n}\nfunction requestUpdateToken(firebaseDependencies, tokenDetails) {\n  return __awaiter(this, void 0, void 0, function () {\n    var headers, body, updateOptions, responseData, response, err_2, message;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          return [4 /*yield*/, getHeaders(firebaseDependencies)];\n        case 1:\n          headers = _a.sent();\n          body = getBody(tokenDetails.subscriptionOptions);\n          updateOptions = {\n            method: 'PATCH',\n            headers: headers,\n            body: JSON.stringify(body)\n          };\n          _a.label = 2;\n        case 2:\n          _a.trys.push([2, 5,, 6]);\n          return [4 /*yield*/, fetch(getEndpoint(firebaseDependencies.appConfig) + \"/\" + tokenDetails.token, updateOptions)];\n        case 3:\n          response = _a.sent();\n          return [4 /*yield*/, response.json()];\n        case 4:\n          responseData = _a.sent();\n          return [3 /*break*/, 6];\n        case 5:\n          err_2 = _a.sent();\n          throw ERROR_FACTORY.create(\"token-update-failed\" /* TOKEN_UPDATE_FAILED */, {\n            errorInfo: err_2\n          });\n        case 6:\n          if (responseData.error) {\n            message = responseData.error.message;\n            throw ERROR_FACTORY.create(\"token-update-failed\" /* TOKEN_UPDATE_FAILED */, {\n              errorInfo: message\n            });\n          }\n          if (!responseData.token) {\n            throw ERROR_FACTORY.create(\"token-update-no-token\" /* TOKEN_UPDATE_NO_TOKEN */);\n          }\n\n          return [2 /*return*/, responseData.token];\n      }\n    });\n  });\n}\nfunction requestDeleteToken(firebaseDependencies, token) {\n  return __awaiter(this, void 0, void 0, function () {\n    var headers, unsubscribeOptions, response, responseData, message, err_3;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          return [4 /*yield*/, getHeaders(firebaseDependencies)];\n        case 1:\n          headers = _a.sent();\n          unsubscribeOptions = {\n            method: 'DELETE',\n            headers: headers\n          };\n          _a.label = 2;\n        case 2:\n          _a.trys.push([2, 5,, 6]);\n          return [4 /*yield*/, fetch(getEndpoint(firebaseDependencies.appConfig) + \"/\" + token, unsubscribeOptions)];\n        case 3:\n          response = _a.sent();\n          return [4 /*yield*/, response.json()];\n        case 4:\n          responseData = _a.sent();\n          if (responseData.error) {\n            message = responseData.error.message;\n            throw ERROR_FACTORY.create(\"token-unsubscribe-failed\" /* TOKEN_UNSUBSCRIBE_FAILED */, {\n              errorInfo: message\n            });\n          }\n          return [3 /*break*/, 6];\n        case 5:\n          err_3 = _a.sent();\n          throw ERROR_FACTORY.create(\"token-unsubscribe-failed\" /* TOKEN_UNSUBSCRIBE_FAILED */, {\n            errorInfo: err_3\n          });\n        case 6:\n          return [2 /*return*/];\n      }\n    });\n  });\n}\n\nfunction getEndpoint(_a) {\n  var projectId = _a.projectId;\n  return ENDPOINT + \"/projects/\" + projectId + \"/registrations\";\n}\nfunction getHeaders(_a) {\n  var appConfig = _a.appConfig,\n    installations = _a.installations;\n  return __awaiter(this, void 0, void 0, function () {\n    var authToken;\n    return __generator(this, function (_b) {\n      switch (_b.label) {\n        case 0:\n          return [4 /*yield*/, installations.getToken()];\n        case 1:\n          authToken = _b.sent();\n          return [2 /*return*/, new Headers({\n            'Content-Type': 'application/json',\n            Accept: 'application/json',\n            'x-goog-api-key': appConfig.apiKey,\n            'x-goog-firebase-installations-auth': \"FIS \" + authToken\n          })];\n      }\n    });\n  });\n}\nfunction getBody(_a) {\n  var p256dh = _a.p256dh,\n    auth = _a.auth,\n    endpoint = _a.endpoint,\n    vapidKey = _a.vapidKey;\n  var body = {\n    web: {\n      endpoint: endpoint,\n      auth: auth,\n      p256dh: p256dh\n    }\n  };\n  if (vapidKey !== DEFAULT_VAPID_KEY) {\n    body.web.applicationPubKey = vapidKey;\n  }\n  return body;\n}\n\n/**\r\n * @license\r\n * Copyright 2019 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n/** UpdateRegistration will be called once every week. */\nvar TOKEN_EXPIRATION_MS = 7 * 24 * 60 * 60 * 1000; // 7 days\nfunction getToken(firebaseDependencies, swRegistration, vapidKey) {\n  return __awaiter(this, void 0, void 0, function () {\n    var pushSubscription, tokenDetails, subscriptionOptions, e_1;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          if (Notification.permission !== 'granted') {\n            throw ERROR_FACTORY.create(\"permission-blocked\" /* PERMISSION_BLOCKED */);\n          }\n\n          return [4 /*yield*/, getPushSubscription(swRegistration, vapidKey)];\n        case 1:\n          pushSubscription = _a.sent();\n          return [4 /*yield*/, dbGet(firebaseDependencies)];\n        case 2:\n          tokenDetails = _a.sent();\n          subscriptionOptions = {\n            vapidKey: vapidKey,\n            swScope: swRegistration.scope,\n            endpoint: pushSubscription.endpoint,\n            auth: arrayToBase64(pushSubscription.getKey('auth')),\n            p256dh: arrayToBase64(pushSubscription.getKey('p256dh'))\n          };\n          if (!!tokenDetails) return [3 /*break*/, 3];\n          // No token, get a new one.\n          return [2 /*return*/, getNewToken(firebaseDependencies, subscriptionOptions)];\n        case 3:\n          if (!!isTokenValid(tokenDetails.subscriptionOptions, subscriptionOptions)) return [3 /*break*/, 8];\n          _a.label = 4;\n        case 4:\n          _a.trys.push([4, 6,, 7]);\n          return [4 /*yield*/, requestDeleteToken(firebaseDependencies, tokenDetails.token)];\n        case 5:\n          _a.sent();\n          return [3 /*break*/, 7];\n        case 6:\n          e_1 = _a.sent();\n          // Suppress errors because of #2364\n          console.warn(e_1);\n          return [3 /*break*/, 7];\n        case 7:\n          return [2 /*return*/, getNewToken(firebaseDependencies, subscriptionOptions)];\n        case 8:\n          if (Date.now() >= tokenDetails.createTime + TOKEN_EXPIRATION_MS) {\n            // Weekly token refresh\n            return [2 /*return*/, updateToken({\n              token: tokenDetails.token,\n              createTime: Date.now(),\n              subscriptionOptions: subscriptionOptions\n            }, firebaseDependencies, swRegistration)];\n          } else {\n            // Valid token, nothing to do.\n            return [2 /*return*/, tokenDetails.token];\n          }\n        case 9:\n          return [2 /*return*/];\n      }\n    });\n  });\n}\n/**\r\n * This method deletes the token from the database, unsubscribes the token from\r\n * FCM, and unregisters the push subscription if it exists.\r\n */\nfunction deleteToken(firebaseDependencies, swRegistration) {\n  return __awaiter(this, void 0, void 0, function () {\n    var tokenDetails, pushSubscription;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          return [4 /*yield*/, dbGet(firebaseDependencies)];\n        case 1:\n          tokenDetails = _a.sent();\n          if (!tokenDetails) return [3 /*break*/, 4];\n          return [4 /*yield*/, requestDeleteToken(firebaseDependencies, tokenDetails.token)];\n        case 2:\n          _a.sent();\n          return [4 /*yield*/, dbRemove(firebaseDependencies)];\n        case 3:\n          _a.sent();\n          _a.label = 4;\n        case 4:\n          return [4 /*yield*/, swRegistration.pushManager.getSubscription()];\n        case 5:\n          pushSubscription = _a.sent();\n          if (pushSubscription) {\n            return [2 /*return*/, pushSubscription.unsubscribe()];\n          }\n          // If there's no SW, consider it a success.\n          return [2 /*return*/, true];\n      }\n    });\n  });\n}\nfunction updateToken(tokenDetails, firebaseDependencies, swRegistration) {\n  return __awaiter(this, void 0, void 0, function () {\n    var updatedToken, updatedTokenDetails, e_2;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          _a.trys.push([0, 3,, 5]);\n          return [4 /*yield*/, requestUpdateToken(firebaseDependencies, tokenDetails)];\n        case 1:\n          updatedToken = _a.sent();\n          updatedTokenDetails = __assign(__assign({}, tokenDetails), {\n            token: updatedToken,\n            createTime: Date.now()\n          });\n          return [4 /*yield*/, dbSet(firebaseDependencies, updatedTokenDetails)];\n        case 2:\n          _a.sent();\n          return [2 /*return*/, updatedToken];\n        case 3:\n          e_2 = _a.sent();\n          return [4 /*yield*/, deleteToken(firebaseDependencies, swRegistration)];\n        case 4:\n          _a.sent();\n          throw e_2;\n        case 5:\n          return [2 /*return*/];\n      }\n    });\n  });\n}\n\nfunction getNewToken(firebaseDependencies, subscriptionOptions) {\n  return __awaiter(this, void 0, void 0, function () {\n    var token, tokenDetails;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          return [4 /*yield*/, requestGetToken(firebaseDependencies, subscriptionOptions)];\n        case 1:\n          token = _a.sent();\n          tokenDetails = {\n            token: token,\n            createTime: Date.now(),\n            subscriptionOptions: subscriptionOptions\n          };\n          return [4 /*yield*/, dbSet(firebaseDependencies, tokenDetails)];\n        case 2:\n          _a.sent();\n          return [2 /*return*/, tokenDetails.token];\n      }\n    });\n  });\n}\n/**\r\n * Gets a PushSubscription for the current user.\r\n */\nfunction getPushSubscription(swRegistration, vapidKey) {\n  return __awaiter(this, void 0, void 0, function () {\n    var subscription;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          return [4 /*yield*/, swRegistration.pushManager.getSubscription()];\n        case 1:\n          subscription = _a.sent();\n          if (subscription) {\n            return [2 /*return*/, subscription];\n          }\n          return [2 /*return*/, swRegistration.pushManager.subscribe({\n            userVisibleOnly: true,\n            // Chrome <= 75 doesn't support base64-encoded VAPID key. For backward compatibility, VAPID key\n            // submitted to pushManager#subscribe must be of type Uint8Array.\n            applicationServerKey: base64ToArray(vapidKey)\n          })];\n      }\n    });\n  });\n}\n/**\r\n * Checks if the saved tokenDetails object matches the configuration provided.\r\n */\nfunction isTokenValid(dbOptions, currentOptions) {\n  var isVapidKeyEqual = currentOptions.vapidKey === dbOptions.vapidKey;\n  var isEndpointEqual = currentOptions.endpoint === dbOptions.endpoint;\n  var isAuthEqual = currentOptions.auth === dbOptions.auth;\n  var isP256dhEqual = currentOptions.p256dh === dbOptions.p256dh;\n  return isVapidKeyEqual && isEndpointEqual && isAuthEqual && isP256dhEqual;\n}\n\n/**\r\n * @license\r\n * Copyright 2019 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\nfunction isConsoleMessage(data) {\n  // This message has a campaign ID, meaning it was sent using the\n  // Firebase Console.\n  return typeof data === 'object' && !!data && CONSOLE_CAMPAIGN_ID in data;\n}\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\nvar WindowController = /** @class */function () {\n  function WindowController(firebaseDependencies) {\n    var _this = this;\n    this.firebaseDependencies = firebaseDependencies;\n    this.vapidKey = null;\n    this.onMessageCallback = null;\n    navigator.serviceWorker.addEventListener('message', function (e) {\n      return _this.messageEventListener(e);\n    });\n  }\n  Object.defineProperty(WindowController.prototype, \"app\", {\n    get: function () {\n      return this.firebaseDependencies.app;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  WindowController.prototype.getToken = function () {\n    return __awaiter(this, void 0, void 0, function () {\n      var swRegistration;\n      return __generator(this, function (_a) {\n        switch (_a.label) {\n          case 0:\n            if (!this.vapidKey) {\n              this.vapidKey = DEFAULT_VAPID_KEY;\n            }\n            return [4 /*yield*/, this.getServiceWorkerRegistration()];\n          case 1:\n            swRegistration = _a.sent();\n            if (!(Notification.permission === 'default')) return [3 /*break*/, 3];\n            // The user hasn't allowed or denied notifications yet. Ask them.\n            return [4 /*yield*/, Notification.requestPermission()];\n          case 2:\n            // The user hasn't allowed or denied notifications yet. Ask them.\n            _a.sent();\n            _a.label = 3;\n          case 3:\n            if (Notification.permission !== 'granted') {\n              throw ERROR_FACTORY.create(\"permission-blocked\" /* PERMISSION_BLOCKED */);\n            }\n\n            return [2 /*return*/, getToken(this.firebaseDependencies, swRegistration, this.vapidKey)];\n        }\n      });\n    });\n  };\n  WindowController.prototype.deleteToken = function () {\n    return __awaiter(this, void 0, void 0, function () {\n      var swRegistration;\n      return __generator(this, function (_a) {\n        switch (_a.label) {\n          case 0:\n            return [4 /*yield*/, this.getServiceWorkerRegistration()];\n          case 1:\n            swRegistration = _a.sent();\n            return [2 /*return*/, deleteToken(this.firebaseDependencies, swRegistration)];\n        }\n      });\n    });\n  };\n  /**\r\n   * Request permission if it is not currently granted.\r\n   *\r\n   * @return Resolves if the permission was granted, rejects otherwise.\r\n   *\r\n   * @deprecated Use Notification.requestPermission() instead.\r\n   * https://developer.mozilla.org/en-US/docs/Web/API/Notification/requestPermission\r\n   */\n  WindowController.prototype.requestPermission = function () {\n    return __awaiter(this, void 0, void 0, function () {\n      var permissionResult;\n      return __generator(this, function (_a) {\n        switch (_a.label) {\n          case 0:\n            if (Notification.permission === 'granted') {\n              return [2 /*return*/];\n            }\n\n            return [4 /*yield*/, Notification.requestPermission()];\n          case 1:\n            permissionResult = _a.sent();\n            if (permissionResult === 'granted') {\n              return [2 /*return*/];\n            } else if (permissionResult === 'denied') {\n              throw ERROR_FACTORY.create(\"permission-blocked\" /* PERMISSION_BLOCKED */);\n            } else {\n              throw ERROR_FACTORY.create(\"permission-default\" /* PERMISSION_DEFAULT */);\n            }\n        }\n      });\n    });\n  };\n  // TODO: Deprecate this and make VAPID key a parameter in getToken.\n  WindowController.prototype.usePublicVapidKey = function (vapidKey) {\n    if (this.vapidKey !== null) {\n      throw ERROR_FACTORY.create(\"use-vapid-key-after-get-token\" /* USE_VAPID_KEY_AFTER_GET_TOKEN */);\n    }\n\n    if (typeof vapidKey !== 'string' || vapidKey.length === 0) {\n      throw ERROR_FACTORY.create(\"invalid-vapid-key\" /* INVALID_VAPID_KEY */);\n    }\n\n    this.vapidKey = vapidKey;\n  };\n  WindowController.prototype.useServiceWorker = function (swRegistration) {\n    if (!(swRegistration instanceof ServiceWorkerRegistration)) {\n      throw ERROR_FACTORY.create(\"invalid-sw-registration\" /* INVALID_SW_REGISTRATION */);\n    }\n\n    if (this.swRegistration) {\n      throw ERROR_FACTORY.create(\"use-sw-after-get-token\" /* USE_SW_AFTER_GET_TOKEN */);\n    }\n\n    this.swRegistration = swRegistration;\n  };\n  /**\r\n   * @param nextOrObserver An observer object or a function triggered on\r\n   * message.\r\n   * @return The unsubscribe function for the observer.\r\n   */\n  WindowController.prototype.onMessage = function (nextOrObserver) {\n    var _this = this;\n    this.onMessageCallback = nextOrObserver;\n    return function () {\n      _this.onMessageCallback = null;\n    };\n  };\n  WindowController.prototype.setBackgroundMessageHandler = function () {\n    throw ERROR_FACTORY.create(\"only-available-in-sw\" /* AVAILABLE_IN_SW */);\n  };\n  // Unimplemented\n  WindowController.prototype.onTokenRefresh = function () {\n    return function () {};\n  };\n  /**\r\n   * Creates or updates the default service worker registration.\r\n   * @return The service worker registration to be used for the push service.\r\n   */\n  WindowController.prototype.getServiceWorkerRegistration = function () {\n    return __awaiter(this, void 0, void 0, function () {\n      var _a, e_1;\n      return __generator(this, function (_b) {\n        switch (_b.label) {\n          case 0:\n            if (!!this.swRegistration) return [3 /*break*/, 4];\n            _b.label = 1;\n          case 1:\n            _b.trys.push([1, 3,, 4]);\n            _a = this;\n            return [4 /*yield*/, navigator.serviceWorker.register(DEFAULT_SW_PATH, {\n              scope: DEFAULT_SW_SCOPE\n            })];\n          case 2:\n            _a.swRegistration = _b.sent();\n            // The timing when browser updates sw when sw has an update is unreliable by my experiment.\n            // It leads to version conflict when the SDK upgrades to a newer version in the main page, but\n            // sw is stuck with the old version. For example, https://github.com/firebase/firebase-js-sdk/issues/2590\n            // The following line reliably updates sw if there was an update.\n            this.swRegistration.update().catch(function () {\n              /* it is non blocking and we don't care if it failed */\n            });\n            return [3 /*break*/, 4];\n          case 3:\n            e_1 = _b.sent();\n            throw ERROR_FACTORY.create(\"failed-service-worker-registration\" /* FAILED_DEFAULT_REGISTRATION */, {\n              browserErrorMessage: e_1.message\n            });\n          case 4:\n            return [2 /*return*/, this.swRegistration];\n        }\n      });\n    });\n  };\n  WindowController.prototype.messageEventListener = function (event) {\n    var _a;\n    return __awaiter(this, void 0, void 0, function () {\n      var _b, type, payload, data;\n      return __generator(this, function (_c) {\n        switch (_c.label) {\n          case 0:\n            if (!((_a = event.data) === null || _a === void 0 ? void 0 : _a.firebaseMessaging)) {\n              // Not a message from FCM\n              return [2 /*return*/];\n            }\n\n            _b = event.data.firebaseMessaging, type = _b.type, payload = _b.payload;\n            // onMessageCallback is either a function or observer/subscriber.\n            if (this.onMessageCallback && type === MessageType.PUSH_RECEIVED) {\n              if (typeof this.onMessageCallback === 'function') {\n                this.onMessageCallback(payload);\n              } else {\n                this.onMessageCallback.next(payload);\n              }\n            }\n            data = payload.data;\n            if (!(isConsoleMessage(data) && data[CONSOLE_CAMPAIGN_ANALYTICS_ENABLED] === '1')) return [3 /*break*/, 2];\n            // Analytics is enabled on this message, so we should log it.\n            return [4 /*yield*/, this.logEvent(type, data)];\n          case 1:\n            // Analytics is enabled on this message, so we should log it.\n            _c.sent();\n            _c.label = 2;\n          case 2:\n            return [2 /*return*/];\n        }\n      });\n    });\n  };\n\n  WindowController.prototype.logEvent = function (messageType, data) {\n    return __awaiter(this, void 0, void 0, function () {\n      var eventType, analytics;\n      return __generator(this, function (_a) {\n        switch (_a.label) {\n          case 0:\n            eventType = getEventType(messageType);\n            return [4 /*yield*/, this.firebaseDependencies.analyticsProvider.get()];\n          case 1:\n            analytics = _a.sent();\n            analytics.logEvent(eventType, {\n              /* eslint-disable camelcase */\n              message_id: data[CONSOLE_CAMPAIGN_ID],\n              message_name: data[CONSOLE_CAMPAIGN_NAME],\n              message_time: data[CONSOLE_CAMPAIGN_TIME],\n              message_device_time: Math.floor(Date.now() / 1000)\n              /* eslint-enable camelcase */\n            });\n\n            return [2 /*return*/];\n        }\n      });\n    });\n  };\n\n  return WindowController;\n}();\nfunction getEventType(messageType) {\n  switch (messageType) {\n    case MessageType.NOTIFICATION_CLICKED:\n      return 'notification_open';\n    case MessageType.PUSH_RECEIVED:\n      return 'notification_foreground';\n    default:\n      throw new Error();\n  }\n}\n\n/**\r\n * @license\r\n * Copyright 2019 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n/** Returns a promise that resolves after given time passes. */\nfunction sleep(ms) {\n  return new Promise(function (resolve) {\n    setTimeout(resolve, ms);\n  });\n}\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\nvar SwController = /** @class */function () {\n  function SwController(firebaseDependencies) {\n    var _this = this;\n    this.firebaseDependencies = firebaseDependencies;\n    this.vapidKey = null;\n    this.bgMessageHandler = null;\n    self.addEventListener('push', function (e) {\n      e.waitUntil(_this.onPush(e));\n    });\n    self.addEventListener('pushsubscriptionchange', function (e) {\n      e.waitUntil(_this.onSubChange(e));\n    });\n    self.addEventListener('notificationclick', function (e) {\n      e.waitUntil(_this.onNotificationClick(e));\n    });\n  }\n  Object.defineProperty(SwController.prototype, \"app\", {\n    get: function () {\n      return this.firebaseDependencies.app;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  /**\r\n   * Calling setBackgroundMessageHandler will opt in to some specific\r\n   * behaviours.\r\n   * 1.) If a notification doesn't need to be shown due to a window already\r\n   * being visible, then push messages will be sent to the page.\r\n   * 2.) If a notification needs to be shown, and the message contains no\r\n   * notification data this method will be called\r\n   * and the promise it returns will be passed to event.waitUntil.\r\n   * If you do not set this callback then all push messages will let and the\r\n   * developer can handle them in a their own 'push' event callback\r\n   *\r\n   * @param callback The callback to be called when a push message is received\r\n   * and a notification must be shown. The callback will be given the data from\r\n   * the push message.\r\n   */\n  SwController.prototype.setBackgroundMessageHandler = function (callback) {\n    if (!callback || typeof callback !== 'function') {\n      throw ERROR_FACTORY.create(\"invalid-bg-handler\" /* INVALID_BG_HANDLER */);\n    }\n\n    this.bgMessageHandler = callback;\n  };\n  // TODO: Remove getToken from SW Controller.\n  // Calling this from an old SW can cause all kinds of trouble.\n  SwController.prototype.getToken = function () {\n    var _a, _b;\n    return __awaiter(this, void 0, void 0, function () {\n      var tokenDetails;\n      return __generator(this, function (_c) {\n        switch (_c.label) {\n          case 0:\n            if (!!this.vapidKey) return [3 /*break*/, 2];\n            return [4 /*yield*/, dbGet(this.firebaseDependencies)];\n          case 1:\n            tokenDetails = _c.sent();\n            this.vapidKey = (_b = (_a = tokenDetails === null || tokenDetails === void 0 ? void 0 : tokenDetails.subscriptionOptions) === null || _a === void 0 ? void 0 : _a.vapidKey) !== null && _b !== void 0 ? _b : DEFAULT_VAPID_KEY;\n            _c.label = 2;\n          case 2:\n            return [2 /*return*/, getToken(this.firebaseDependencies, self.registration, this.vapidKey)];\n        }\n      });\n    });\n  };\n  // TODO: Remove deleteToken from SW Controller.\n  // Calling this from an old SW can cause all kinds of trouble.\n  SwController.prototype.deleteToken = function () {\n    return deleteToken(this.firebaseDependencies, self.registration);\n  };\n  SwController.prototype.requestPermission = function () {\n    throw ERROR_FACTORY.create(\"only-available-in-window\" /* AVAILABLE_IN_WINDOW */);\n  };\n  // TODO: Deprecate this and make VAPID key a parameter in getToken.\n  // TODO: Remove this together with getToken from SW Controller.\n  SwController.prototype.usePublicVapidKey = function (vapidKey) {\n    if (this.vapidKey !== null) {\n      throw ERROR_FACTORY.create(\"use-vapid-key-after-get-token\" /* USE_VAPID_KEY_AFTER_GET_TOKEN */);\n    }\n\n    if (typeof vapidKey !== 'string' || vapidKey.length === 0) {\n      throw ERROR_FACTORY.create(\"invalid-vapid-key\" /* INVALID_VAPID_KEY */);\n    }\n\n    this.vapidKey = vapidKey;\n  };\n  SwController.prototype.useServiceWorker = function () {\n    throw ERROR_FACTORY.create(\"only-available-in-window\" /* AVAILABLE_IN_WINDOW */);\n  };\n\n  SwController.prototype.onMessage = function () {\n    throw ERROR_FACTORY.create(\"only-available-in-window\" /* AVAILABLE_IN_WINDOW */);\n  };\n\n  SwController.prototype.onTokenRefresh = function () {\n    throw ERROR_FACTORY.create(\"only-available-in-window\" /* AVAILABLE_IN_WINDOW */);\n  };\n  /**\r\n   * A handler for push events that shows notifications based on the content of\r\n   * the payload.\r\n   *\r\n   * The payload must be a JSON-encoded Object with a `notification` key. The\r\n   * value of the `notification` property will be used as the NotificationOptions\r\n   * object passed to showNotification. Additionally, the `title` property of the\r\n   * notification object will be used as the title.\r\n   *\r\n   * If there is no notification data in the payload then no notification will be\r\n   * shown.\r\n   */\n  SwController.prototype.onPush = function (event) {\n    return __awaiter(this, void 0, void 0, function () {\n      var payload, clientList, notificationDetails;\n      return __generator(this, function (_a) {\n        switch (_a.label) {\n          case 0:\n            payload = getMessagePayload(event);\n            if (!payload) {\n              return [2 /*return*/];\n            }\n\n            return [4 /*yield*/, getClientList()];\n          case 1:\n            clientList = _a.sent();\n            if (hasVisibleClients(clientList)) {\n              // App in foreground. Send to page.\n              return [2 /*return*/, sendMessageToWindowClients(clientList, payload)];\n            }\n            notificationDetails = getNotificationData(payload);\n            if (!notificationDetails) return [3 /*break*/, 3];\n            return [4 /*yield*/, showNotification(notificationDetails)];\n          case 2:\n            _a.sent();\n            return [3 /*break*/, 5];\n          case 3:\n            if (!this.bgMessageHandler) return [3 /*break*/, 5];\n            return [4 /*yield*/, this.bgMessageHandler(payload)];\n          case 4:\n            _a.sent();\n            _a.label = 5;\n          case 5:\n            return [2 /*return*/];\n        }\n      });\n    });\n  };\n\n  SwController.prototype.onSubChange = function (event) {\n    var _a, _b;\n    return __awaiter(this, void 0, void 0, function () {\n      var newSubscription, tokenDetails;\n      return __generator(this, function (_c) {\n        switch (_c.label) {\n          case 0:\n            newSubscription = event.newSubscription;\n            if (!!newSubscription) return [3 /*break*/, 2];\n            // Subscription revoked, delete token\n            return [4 /*yield*/, deleteToken(this.firebaseDependencies, self.registration)];\n          case 1:\n            // Subscription revoked, delete token\n            _c.sent();\n            return [2 /*return*/];\n          case 2:\n            return [4 /*yield*/, dbGet(this.firebaseDependencies)];\n          case 3:\n            tokenDetails = _c.sent();\n            return [4 /*yield*/, deleteToken(this.firebaseDependencies, self.registration)];\n          case 4:\n            _c.sent();\n            return [4 /*yield*/, getToken(this.firebaseDependencies, self.registration, (_b = (_a = tokenDetails === null || tokenDetails === void 0 ? void 0 : tokenDetails.subscriptionOptions) === null || _a === void 0 ? void 0 : _a.vapidKey) !== null && _b !== void 0 ? _b : DEFAULT_VAPID_KEY)];\n          case 5:\n            _c.sent();\n            return [2 /*return*/];\n        }\n      });\n    });\n  };\n\n  SwController.prototype.onNotificationClick = function (event) {\n    var _a, _b;\n    return __awaiter(this, void 0, void 0, function () {\n      var payload, link, client, message;\n      return __generator(this, function (_c) {\n        switch (_c.label) {\n          case 0:\n            payload = (_b = (_a = event.notification) === null || _a === void 0 ? void 0 : _a.data) === null || _b === void 0 ? void 0 : _b[FCM_MSG];\n            if (!payload) {\n              // Not an FCM notification, do nothing.\n              return [2 /*return*/];\n            } else if (event.action) {\n              // User clicked on an action button.\n              // This will allow devs to act on action button clicks by using a custom\n              // onNotificationClick listener that they define.\n              return [2 /*return*/];\n            }\n            // Prevent other listeners from receiving the event\n            event.stopImmediatePropagation();\n            event.notification.close();\n            link = getLink(payload);\n            if (!link) {\n              return [2 /*return*/];\n            }\n\n            return [4 /*yield*/, getWindowClient(link)];\n          case 1:\n            client = _c.sent();\n            if (!!client) return [3 /*break*/, 4];\n            return [4 /*yield*/, self.clients.openWindow(link)];\n          case 2:\n            // Unable to find window client so need to open one.\n            // This also focuses the opened client.\n            client = _c.sent();\n            // Wait three seconds for the client to initialize and set up the message\n            // handler so that it can receive the message.\n            return [4 /*yield*/, sleep(3000)];\n          case 3:\n            // Wait three seconds for the client to initialize and set up the message\n            // handler so that it can receive the message.\n            _c.sent();\n            return [3 /*break*/, 6];\n          case 4:\n            return [4 /*yield*/, client.focus()];\n          case 5:\n            client = _c.sent();\n            _c.label = 6;\n          case 6:\n            if (!client) {\n              // Window Client will not be returned if it's for a third party origin.\n              return [2 /*return*/];\n            }\n\n            message = createNewMessage(MessageType.NOTIFICATION_CLICKED, payload);\n            return [2 /*return*/, client.postMessage(message)];\n        }\n      });\n    });\n  };\n  return SwController;\n}();\nfunction getMessagePayload(_a) {\n  var data = _a.data;\n  if (!data) {\n    return null;\n  }\n  try {\n    return data.json();\n  } catch (err) {\n    // Not JSON so not an FCM message.\n    return null;\n  }\n}\nfunction getNotificationData(payload) {\n  var _a;\n  if (!payload || typeof payload.notification !== 'object') {\n    return;\n  }\n  var notificationInformation = __assign({}, payload.notification);\n  // Put the message payload under FCM_MSG name so we can identify the\n  // notification as being an FCM notification vs a notification from\n  // somewhere else (i.e. normal web push or developer generated\n  // notification).\n  notificationInformation.data = __assign(__assign({}, payload.notification.data), (_a = {}, _a[FCM_MSG] = payload, _a));\n  return notificationInformation;\n}\n/**\r\n * @param url The URL to look for when focusing a client.\r\n * @return Returns an existing window client or a newly opened WindowClient.\r\n */\nfunction getWindowClient(url) {\n  return __awaiter(this, void 0, void 0, function () {\n    var parsedURL, clientList, clientList_1, clientList_1_1, client, parsedClientUrl;\n    var e_1, _a;\n    return __generator(this, function (_b) {\n      switch (_b.label) {\n        case 0:\n          parsedURL = new URL(url, self.location.href);\n          return [4 /*yield*/, getClientList()];\n        case 1:\n          clientList = _b.sent();\n          try {\n            for (clientList_1 = __values(clientList), clientList_1_1 = clientList_1.next(); !clientList_1_1.done; clientList_1_1 = clientList_1.next()) {\n              client = clientList_1_1.value;\n              parsedClientUrl = new URL(client.url, self.location.href);\n              if (parsedClientUrl.host === parsedURL.host) {\n                return [2 /*return*/, client];\n              }\n            }\n          } catch (e_1_1) {\n            e_1 = {\n              error: e_1_1\n            };\n          } finally {\n            try {\n              if (clientList_1_1 && !clientList_1_1.done && (_a = clientList_1.return)) _a.call(clientList_1);\n            } finally {\n              if (e_1) throw e_1.error;\n            }\n          }\n          return [2 /*return*/, null];\n      }\n    });\n  });\n}\n/**\r\n * @returns If there is currently a visible WindowClient, this method will\r\n * resolve to true, otherwise false.\r\n */\nfunction hasVisibleClients(clientList) {\n  return clientList.some(function (client) {\n    return client.visibilityState === 'visible' &&\n    // Ignore chrome-extension clients as that matches the background pages\n    // of extensions, which are always considered visible for some reason.\n    !client.url.startsWith('chrome-extension://');\n  });\n}\n/**\r\n * @param payload The data from the push event that should be sent to all\r\n * available pages.\r\n * @returns Returns a promise that resolves once the message has been sent to\r\n * all WindowClients.\r\n */\nfunction sendMessageToWindowClients(clientList, payload) {\n  var e_2, _a;\n  var message = createNewMessage(MessageType.PUSH_RECEIVED, payload);\n  try {\n    for (var clientList_2 = __values(clientList), clientList_2_1 = clientList_2.next(); !clientList_2_1.done; clientList_2_1 = clientList_2.next()) {\n      var client = clientList_2_1.value;\n      client.postMessage(message);\n    }\n  } catch (e_2_1) {\n    e_2 = {\n      error: e_2_1\n    };\n  } finally {\n    try {\n      if (clientList_2_1 && !clientList_2_1.done && (_a = clientList_2.return)) _a.call(clientList_2);\n    } finally {\n      if (e_2) throw e_2.error;\n    }\n  }\n}\nfunction getClientList() {\n  return self.clients.matchAll({\n    type: 'window',\n    includeUncontrolled: true\n    // TS doesn't know that \"type: 'window'\" means it'll return WindowClient[]\n  });\n}\n\nfunction createNewMessage(type, payload) {\n  return {\n    firebaseMessaging: {\n      type: type,\n      payload: payload\n    }\n  };\n}\nfunction showNotification(details) {\n  var _a;\n  var title = (_a = details.title) !== null && _a !== void 0 ? _a : '';\n  var actions = details.actions;\n  // Note: Firefox does not support the maxActions property.\n  // https://developer.mozilla.org/en-US/docs/Web/API/notification/maxActions\n  var maxActions = Notification.maxActions;\n  if (actions && maxActions && actions.length > maxActions) {\n    console.warn(\"This browser only supports \" + maxActions + \" actions. The remaining actions will not be displayed.\");\n  }\n  return self.registration.showNotification(title, details);\n}\nfunction getLink(payload) {\n  var _a, _b, _c;\n  // eslint-disable-next-line camelcase\n  var link = (_b = (_a = payload.fcmOptions) === null || _a === void 0 ? void 0 : _a.link) !== null && _b !== void 0 ? _b : (_c = payload.notification) === null || _c === void 0 ? void 0 : _c.click_action;\n  if (link) {\n    return link;\n  }\n  if (isConsoleMessage(payload.data)) {\n    // Notification created in the Firebase Console. Redirect to origin.\n    return self.location.origin;\n  } else {\n    return null;\n  }\n}\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\nvar MESSAGING_NAME = 'messaging';\nfunction factoryMethod(container) {\n  // Dependencies.\n  var app = container.getProvider('app').getImmediate();\n  var appConfig = extractAppConfig(app);\n  var installations = container.getProvider('installations').getImmediate();\n  var analyticsProvider = container.getProvider('analytics-internal');\n  var firebaseDependencies = {\n    app: app,\n    appConfig: appConfig,\n    installations: installations,\n    analyticsProvider: analyticsProvider\n  };\n  if (!isSupported()) {\n    throw ERROR_FACTORY.create(\"unsupported-browser\" /* UNSUPPORTED_BROWSER */);\n  }\n\n  if (self && 'ServiceWorkerGlobalScope' in self) {\n    // Running in ServiceWorker context\n    return new SwController(firebaseDependencies);\n  } else {\n    // Assume we are in the window context.\n    return new WindowController(firebaseDependencies);\n  }\n}\nvar NAMESPACE_EXPORTS = {\n  isSupported: isSupported\n};\nfirebase.INTERNAL.registerComponent(new Component(MESSAGING_NAME, factoryMethod, \"PUBLIC\" /* PUBLIC */).setServiceProps(NAMESPACE_EXPORTS));\nfunction isSupported() {\n  if (self && 'ServiceWorkerGlobalScope' in self) {\n    // Running in ServiceWorker context\n    return isSWControllerSupported();\n  } else {\n    // Assume we are in the window context.\n    return isWindowControllerSupported();\n  }\n}\n/**\r\n * Checks to see if the required APIs exist.\r\n */\nfunction isWindowControllerSupported() {\n  return 'indexedDB' in window && indexedDB !== null && navigator.cookieEnabled && 'serviceWorker' in navigator && 'PushManager' in window && 'Notification' in window && 'fetch' in window && ServiceWorkerRegistration.prototype.hasOwnProperty('showNotification') && PushSubscription.prototype.hasOwnProperty('getKey');\n}\n/**\r\n * Checks to see if the required APIs exist within SW Context.\r\n */\nfunction isSWControllerSupported() {\n  return 'indexedDB' in self && indexedDB !== null && 'PushManager' in self && 'Notification' in self && ServiceWorkerRegistration.prototype.hasOwnProperty('showNotification') && PushSubscription.prototype.hasOwnProperty('getKey');\n}","map":{"version":3,"names":["ERROR_MAP","_a","ERROR_FACTORY","ErrorFactory","extractAppConfig","app","options","getMissingValueError","name","configKeys","configKeys_1","__values","configKeys_1_1","next","done","keyName","value","appName","projectId","apiKey","appId","senderId","messagingSenderId","valueName","create","DEFAULT_SW_PATH","DEFAULT_SW_SCOPE","DEFAULT_VAPID_KEY","ENDPOINT","FCM_MSG","CONSOLE_CAMPAIGN_ID","CONSOLE_CAMPAIGN_NAME","CONSOLE_CAMPAIGN_TIME","CONSOLE_CAMPAIGN_ANALYTICS_ENABLED","MessageType","arrayToBase64","array","uint8Array","Uint8Array","base64String","btoa","String","fromCharCode","apply","__spread","replace","base64ToArray","padding","repeat","length","base64","rawData","atob","outputArray","i","charCodeAt","OLD_DB_NAME","OLD_DB_VERSION","OLD_OBJECT_STORE_NAME","migrateOldDatabase","indexedDB","databases","sent","dbNames","map","db","includes","tokenDetails","openDb","__awaiter","_this","oldVersion","objectStoreNames","contains","objectStore","transaction","index","get","_b","clear","oldDetails","auth","p256dh","endpoint","token","fcmToken","createTime","Date","now","subscriptionOptions","swScope","vapidKey","close","deleteDb","checkTokenDetails","DATABASE_NAME","DATABASE_VERSION","OBJECT_STORE_NAME","dbPromise","getDbPromise","upgradeDb","createObjectStore","dbGet","firebaseDependencies","key","getKey","appConfig","oldTokenDetails","dbSet","tx","put","complete","dbRemove","delete","requestGetToken","getHeaders","headers","body","getBody","subscribeOptions","method","JSON","stringify","fetch","getEndpoint","response","json","responseData","errorInfo","err_1","error","message","requestUpdateToken","updateOptions","err_2","requestDeleteToken","unsubscribeOptions","err_3","installations","getToken","authToken","Headers","Accept","web","applicationPubKey","TOKEN_EXPIRATION_MS","swRegistration","Notification","permission","getPushSubscription","pushSubscription","scope","getNewToken","isTokenValid","console","warn","e_1","updateToken","deleteToken","pushManager","getSubscription","unsubscribe","updatedToken","updatedTokenDetails","__assign","e_2","subscription","subscribe","userVisibleOnly","applicationServerKey","dbOptions","currentOptions","isVapidKeyEqual","isEndpointEqual","isAuthEqual","isP256dhEqual","isConsoleMessage","data","WindowController","onMessageCallback","navigator","serviceWorker","addEventListener","e","messageEventListener","Object","defineProperty","prototype","getServiceWorkerRegistration","requestPermission","permissionResult","usePublicVapidKey","useServiceWorker","ServiceWorkerRegistration","onMessage","nextOrObserver","setBackgroundMessageHandler","onTokenRefresh","register","update","catch","browserErrorMessage","event","firebaseMessaging","type","payload","PUSH_RECEIVED","logEvent","_c","messageType","eventType","getEventType","analyticsProvider","analytics","message_id","message_name","message_time","message_device_time","Math","floor","NOTIFICATION_CLICKED","Error","sleep","ms","Promise","resolve","setTimeout","SwController","bgMessageHandler","self","waitUntil","onPush","onSubChange","onNotificationClick","callback","registration","getMessagePayload","getClientList","clientList","hasVisibleClients","sendMessageToWindowClients","notificationDetails","getNotificationData","showNotification","newSubscription","notification","action","stopImmediatePropagation","link","getLink","getWindowClient","client","clients","openWindow","focus","createNewMessage","postMessage","err","notificationInformation","url","parsedURL","URL","location","href","clientList_1","clientList_1_1","parsedClientUrl","host","some","visibilityState","startsWith","clientList_2","clientList_2_1","matchAll","includeUncontrolled","details","title","actions","maxActions","fcmOptions","click_action","origin","MESSAGING_NAME","factoryMethod","container","getProvider","getImmediate","isSupported","NAMESPACE_EXPORTS","firebase","INTERNAL","registerComponent","Component","setServiceProps","isSWControllerSupported","isWindowControllerSupported","window","cookieEnabled","hasOwnProperty","PushSubscription"],"sources":["../src/util/errors.ts","../src/helpers/extract-app-config.ts","../src/util/constants.ts","../src/interfaces/internal-message.ts","../src/helpers/array-base64-translator.ts","../src/helpers/migrate-old-database.ts","../src/helpers/idb-manager.ts","../src/core/api.ts","../src/core/token-management.ts","../src/helpers/is-console-message.ts","../src/controllers/window-controller.ts","../src/helpers/sleep.ts","../src/controllers/sw-controller.ts","../src/index.ts"],"sourcesContent":["/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { ErrorFactory, ErrorMap } from '@firebase/util';\n\nexport const enum ErrorCode {\n  MISSING_APP_CONFIG_VALUES = 'missing-app-config-values',\n  AVAILABLE_IN_WINDOW = 'only-available-in-window',\n  AVAILABLE_IN_SW = 'only-available-in-sw',\n  PERMISSION_DEFAULT = 'permission-default',\n  PERMISSION_BLOCKED = 'permission-blocked',\n  UNSUPPORTED_BROWSER = 'unsupported-browser',\n  FAILED_DEFAULT_REGISTRATION = 'failed-service-worker-registration',\n  TOKEN_SUBSCRIBE_FAILED = 'token-subscribe-failed',\n  TOKEN_SUBSCRIBE_NO_TOKEN = 'token-subscribe-no-token',\n  TOKEN_UNSUBSCRIBE_FAILED = 'token-unsubscribe-failed',\n  TOKEN_UPDATE_FAILED = 'token-update-failed',\n  TOKEN_UPDATE_NO_TOKEN = 'token-update-no-token',\n  INVALID_BG_HANDLER = 'invalid-bg-handler',\n  USE_SW_AFTER_GET_TOKEN = 'use-sw-after-get-token',\n  INVALID_SW_REGISTRATION = 'invalid-sw-registration',\n  USE_VAPID_KEY_AFTER_GET_TOKEN = 'use-vapid-key-after-get-token',\n  INVALID_VAPID_KEY = 'invalid-vapid-key'\n}\n\nexport const ERROR_MAP: ErrorMap<ErrorCode> = {\n  [ErrorCode.MISSING_APP_CONFIG_VALUES]:\n    'Missing App configuration value: \"{$valueName}\"',\n  [ErrorCode.AVAILABLE_IN_WINDOW]:\n    'This method is available in a Window context.',\n  [ErrorCode.AVAILABLE_IN_SW]:\n    'This method is available in a service worker context.',\n  [ErrorCode.PERMISSION_DEFAULT]:\n    'The notification permission was not granted and dismissed instead.',\n  [ErrorCode.PERMISSION_BLOCKED]:\n    'The notification permission was not granted and blocked instead.',\n  [ErrorCode.UNSUPPORTED_BROWSER]:\n    \"This browser doesn't support the API's required to use the firebase SDK.\",\n  [ErrorCode.FAILED_DEFAULT_REGISTRATION]:\n    'We are unable to register the default service worker. {$browserErrorMessage}',\n  [ErrorCode.TOKEN_SUBSCRIBE_FAILED]:\n    'A problem occured while subscribing the user to FCM: {$errorInfo}',\n  [ErrorCode.TOKEN_SUBSCRIBE_NO_TOKEN]:\n    'FCM returned no token when subscribing the user to push.',\n  [ErrorCode.TOKEN_UNSUBSCRIBE_FAILED]:\n    'A problem occured while unsubscribing the ' +\n    'user from FCM: {$errorInfo}',\n  [ErrorCode.TOKEN_UPDATE_FAILED]:\n    'A problem occured while updating the user from FCM: {$errorInfo}',\n  [ErrorCode.TOKEN_UPDATE_NO_TOKEN]:\n    'FCM returned no token when updating the user to push.',\n  [ErrorCode.USE_SW_AFTER_GET_TOKEN]:\n    'The useServiceWorker() method may only be called once and must be ' +\n    'called before calling getToken() to ensure your service worker is used.',\n  [ErrorCode.INVALID_SW_REGISTRATION]:\n    'The input to useServiceWorker() must be a ServiceWorkerRegistration.',\n  [ErrorCode.INVALID_BG_HANDLER]:\n    'The input to setBackgroundMessageHandler() must be a function.',\n  [ErrorCode.INVALID_VAPID_KEY]: 'The public VAPID key must be a string.',\n  [ErrorCode.USE_VAPID_KEY_AFTER_GET_TOKEN]:\n    'The usePublicVapidKey() method may only be called once and must be ' +\n    'called before calling getToken() to ensure your VAPID key is used.'\n};\n\ninterface ErrorParams {\n  [ErrorCode.MISSING_APP_CONFIG_VALUES]: {\n    valueName: string;\n  };\n  [ErrorCode.FAILED_DEFAULT_REGISTRATION]: { browserErrorMessage: string };\n  [ErrorCode.TOKEN_SUBSCRIBE_FAILED]: { errorInfo: string };\n  [ErrorCode.TOKEN_UNSUBSCRIBE_FAILED]: { errorInfo: string };\n  [ErrorCode.TOKEN_UPDATE_FAILED]: { errorInfo: string };\n}\n\nexport const ERROR_FACTORY = new ErrorFactory<ErrorCode, ErrorParams>(\n  'messaging',\n  'Messaging',\n  ERROR_MAP\n);\n","/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { FirebaseApp, FirebaseOptions } from '@firebase/app-types';\nimport { FirebaseError } from '@firebase/util';\nimport { AppConfig } from '../interfaces/app-config';\nimport { ERROR_FACTORY, ErrorCode } from '../util/errors';\n\nexport function extractAppConfig(app: FirebaseApp): AppConfig {\n  if (!app || !app.options) {\n    throw getMissingValueError('App Configuration Object');\n  }\n\n  if (!app.name) {\n    throw getMissingValueError('App Name');\n  }\n\n  // Required app config keys\n  const configKeys: ReadonlyArray<keyof FirebaseOptions> = [\n    'projectId',\n    'apiKey',\n    'appId',\n    'messagingSenderId'\n  ];\n\n  const { options } = app;\n  for (const keyName of configKeys) {\n    if (!options[keyName]) {\n      throw getMissingValueError(keyName);\n    }\n  }\n\n  return {\n    appName: app.name,\n    projectId: options.projectId!,\n    apiKey: options.apiKey!,\n    appId: options.appId!,\n    senderId: options.messagingSenderId!\n  };\n}\n\nfunction getMissingValueError(valueName: string): FirebaseError {\n  return ERROR_FACTORY.create(ErrorCode.MISSING_APP_CONFIG_VALUES, {\n    valueName\n  });\n}\n","/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport const DEFAULT_SW_PATH = '/firebase-messaging-sw.js';\nexport const DEFAULT_SW_SCOPE = '/firebase-cloud-messaging-push-scope';\n\nexport const DEFAULT_VAPID_KEY =\n  'BDOU99-h67HcA6JeFXHbSNMu7e2yNNu3RzoMj8TM4W88jITfq7ZmPvIM1Iv-4_l2LxQcYwhqby2xGpWwzjfAnG4';\n\nexport const ENDPOINT = 'https://fcmregistrations.googleapis.com/v1';\n\n/** Key of FCM Payload in Notification's data field. */\nexport const FCM_MSG = 'FCM_MSG';\n\nexport const CONSOLE_CAMPAIGN_ID = 'google.c.a.c_id';\nexport const CONSOLE_CAMPAIGN_NAME = 'google.c.a.c_l';\nexport const CONSOLE_CAMPAIGN_TIME = 'google.c.a.ts';\n/** Set to '1' if Analytics is enabled for the campaign */\nexport const CONSOLE_CAMPAIGN_ANALYTICS_ENABLED = 'google.c.a.e';\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { MessagePayload } from './message-payload';\n\nexport enum MessageType {\n  PUSH_RECEIVED = 'push-received',\n  NOTIFICATION_CLICKED = 'notification-clicked'\n}\n\nexport interface InternalMessage {\n  firebaseMessaging: {\n    type: MessageType;\n    payload: MessagePayload;\n  };\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport function arrayToBase64(array: Uint8Array | ArrayBuffer): string {\n  const uint8Array = new Uint8Array(array);\n  const base64String = btoa(String.fromCharCode(...uint8Array));\n  return base64String\n    .replace(/=/g, '')\n    .replace(/\\+/g, '-')\n    .replace(/\\//g, '_');\n}\n\nexport function base64ToArray(base64String: string): Uint8Array {\n  const padding = '='.repeat((4 - (base64String.length % 4)) % 4);\n  const base64 = (base64String + padding)\n    .replace(/\\-/g, '+')\n    .replace(/_/g, '/');\n\n  const rawData = atob(base64);\n  const outputArray = new Uint8Array(rawData.length);\n\n  for (let i = 0; i < rawData.length; ++i) {\n    outputArray[i] = rawData.charCodeAt(i);\n  }\n  return outputArray;\n}\n","/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { openDb, deleteDb } from 'idb';\nimport { TokenDetails } from '../interfaces/token-details';\nimport { arrayToBase64 } from './array-base64-translator';\n\n// https://github.com/firebase/firebase-js-sdk/blob/7857c212f944a2a9eb421fd4cb7370181bc034b5/packages/messaging/src/interfaces/token-details.ts\nexport interface V2TokenDetails {\n  fcmToken: string;\n  swScope: string;\n  vapidKey: string | Uint8Array;\n  subscription: PushSubscription;\n  fcmSenderId: string;\n  fcmPushSet: string;\n  createTime?: number;\n  endpoint?: string;\n  auth?: string;\n  p256dh?: string;\n}\n\n// https://github.com/firebase/firebase-js-sdk/blob/6b5b15ce4ea3df5df5df8a8b33a4e41e249c7715/packages/messaging/src/interfaces/token-details.ts\nexport interface V3TokenDetails {\n  fcmToken: string;\n  swScope: string;\n  vapidKey: Uint8Array;\n  fcmSenderId: string;\n  fcmPushSet: string;\n  endpoint: string;\n  auth: ArrayBuffer;\n  p256dh: ArrayBuffer;\n  createTime: number;\n}\n\n// https://github.com/firebase/firebase-js-sdk/blob/9567dba664732f681fa7fe60f5b7032bb1daf4c9/packages/messaging/src/interfaces/token-details.ts\nexport interface V4TokenDetails {\n  fcmToken: string;\n  swScope: string;\n  vapidKey: Uint8Array;\n  fcmSenderId: string;\n  endpoint: string;\n  auth: ArrayBufferLike;\n  p256dh: ArrayBufferLike;\n  createTime: number;\n}\n\nconst OLD_DB_NAME = 'fcm_token_details_db';\n/**\n * The last DB version of 'fcm_token_details_db' was 4. This is one higher,\n * so that the upgrade callback is called for all versions of the old DB.\n */\nconst OLD_DB_VERSION = 5;\nconst OLD_OBJECT_STORE_NAME = 'fcm_token_object_Store';\n\nexport async function migrateOldDatabase(\n  senderId: string\n): Promise<TokenDetails | null> {\n  if ('databases' in indexedDB) {\n    // indexedDb.databases() is an IndexedDB v3 API\n    // and does not exist in all browsers.\n    // TODO: Remove typecast when it lands in TS types.\n    const databases = await (indexedDB as {\n      databases(): Promise<Array<{ name: string; version: number }>>;\n    }).databases();\n    const dbNames = databases.map(db => db.name);\n\n    if (!dbNames.includes(OLD_DB_NAME)) {\n      // old DB didn't exist, no need to open.\n      return null;\n    }\n  }\n\n  let tokenDetails: TokenDetails | null = null;\n\n  const db = await openDb(OLD_DB_NAME, OLD_DB_VERSION, async db => {\n    if (db.oldVersion < 2) {\n      // Database too old, skip migration.\n      return;\n    }\n\n    if (!db.objectStoreNames.contains(OLD_OBJECT_STORE_NAME)) {\n      // Database did not exist. Nothing to do.\n      return;\n    }\n\n    const objectStore = db.transaction.objectStore(OLD_OBJECT_STORE_NAME);\n    const value = await objectStore.index('fcmSenderId').get(senderId);\n    await objectStore.clear();\n\n    if (!value) {\n      // No entry in the database, nothing to migrate.\n      return;\n    }\n\n    if (db.oldVersion === 2) {\n      const oldDetails = value as V2TokenDetails;\n\n      if (!oldDetails.auth || !oldDetails.p256dh || !oldDetails.endpoint) {\n        return;\n      }\n\n      tokenDetails = {\n        token: oldDetails.fcmToken,\n        createTime: oldDetails.createTime ?? Date.now(),\n        subscriptionOptions: {\n          auth: oldDetails.auth,\n          p256dh: oldDetails.p256dh,\n          endpoint: oldDetails.endpoint,\n          swScope: oldDetails.swScope,\n          vapidKey:\n            typeof oldDetails.vapidKey === 'string'\n              ? oldDetails.vapidKey\n              : arrayToBase64(oldDetails.vapidKey)\n        }\n      };\n    } else if (db.oldVersion === 3) {\n      const oldDetails = value as V3TokenDetails;\n\n      tokenDetails = {\n        token: oldDetails.fcmToken,\n        createTime: oldDetails.createTime,\n        subscriptionOptions: {\n          auth: arrayToBase64(oldDetails.auth),\n          p256dh: arrayToBase64(oldDetails.p256dh),\n          endpoint: oldDetails.endpoint,\n          swScope: oldDetails.swScope,\n          vapidKey: arrayToBase64(oldDetails.vapidKey)\n        }\n      };\n    } else if (db.oldVersion === 4) {\n      const oldDetails = value as V4TokenDetails;\n\n      tokenDetails = {\n        token: oldDetails.fcmToken,\n        createTime: oldDetails.createTime,\n        subscriptionOptions: {\n          auth: arrayToBase64(oldDetails.auth),\n          p256dh: arrayToBase64(oldDetails.p256dh),\n          endpoint: oldDetails.endpoint,\n          swScope: oldDetails.swScope,\n          vapidKey: arrayToBase64(oldDetails.vapidKey)\n        }\n      };\n    }\n  });\n  db.close();\n\n  // Delete all old databases.\n  await deleteDb(OLD_DB_NAME);\n  await deleteDb('fcm_vapid_details_db');\n  await deleteDb('undefined');\n\n  return checkTokenDetails(tokenDetails) ? tokenDetails : null;\n}\n\nfunction checkTokenDetails(\n  tokenDetails: TokenDetails | null\n): tokenDetails is TokenDetails {\n  if (!tokenDetails || !tokenDetails.subscriptionOptions) {\n    return false;\n  }\n  const { subscriptionOptions } = tokenDetails;\n  return (\n    typeof tokenDetails.createTime === 'number' &&\n    tokenDetails.createTime > 0 &&\n    typeof tokenDetails.token === 'string' &&\n    tokenDetails.token.length > 0 &&\n    typeof subscriptionOptions.auth === 'string' &&\n    subscriptionOptions.auth.length > 0 &&\n    typeof subscriptionOptions.p256dh === 'string' &&\n    subscriptionOptions.p256dh.length > 0 &&\n    typeof subscriptionOptions.endpoint === 'string' &&\n    subscriptionOptions.endpoint.length > 0 &&\n    typeof subscriptionOptions.swScope === 'string' &&\n    subscriptionOptions.swScope.length > 0 &&\n    typeof subscriptionOptions.vapidKey === 'string' &&\n    subscriptionOptions.vapidKey.length > 0\n  );\n}\n","/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { DB, openDb, deleteDb } from 'idb';\nimport { TokenDetails } from '../interfaces/token-details';\nimport { migrateOldDatabase } from './migrate-old-database';\nimport { FirebaseInternalDependencies } from '../interfaces/internal-dependencies';\n\n// Exported for tests.\nexport const DATABASE_NAME = 'firebase-messaging-database';\nconst DATABASE_VERSION = 1;\nconst OBJECT_STORE_NAME = 'firebase-messaging-store';\n\nlet dbPromise: Promise<DB> | null = null;\nfunction getDbPromise(): Promise<DB> {\n  if (!dbPromise) {\n    dbPromise = openDb(DATABASE_NAME, DATABASE_VERSION, upgradeDb => {\n      // We don't use 'break' in this switch statement, the fall-through\n      // behavior is what we want, because if there are multiple versions between\n      // the old version and the current version, we want ALL the migrations\n      // that correspond to those versions to run, not only the last one.\n      // eslint-disable-next-line default-case\n      switch (upgradeDb.oldVersion) {\n        case 0:\n          upgradeDb.createObjectStore(OBJECT_STORE_NAME);\n      }\n    });\n  }\n  return dbPromise;\n}\n\n/** Gets record(s) from the objectStore that match the given key. */\nexport async function dbGet(\n  firebaseDependencies: FirebaseInternalDependencies\n): Promise<TokenDetails | undefined> {\n  const key = getKey(firebaseDependencies);\n  const db = await getDbPromise();\n  const tokenDetails = await db\n    .transaction(OBJECT_STORE_NAME)\n    .objectStore(OBJECT_STORE_NAME)\n    .get(key);\n\n  if (tokenDetails) {\n    return tokenDetails;\n  } else {\n    // Check if there is a tokenDetails object in the old DB.\n    const oldTokenDetails = await migrateOldDatabase(\n      firebaseDependencies.appConfig.senderId\n    );\n    if (oldTokenDetails) {\n      await dbSet(firebaseDependencies, oldTokenDetails);\n      return oldTokenDetails;\n    }\n  }\n}\n\n/** Assigns or overwrites the record for the given key with the given value. */\nexport async function dbSet(\n  firebaseDependencies: FirebaseInternalDependencies,\n  tokenDetails: TokenDetails\n): Promise<TokenDetails> {\n  const key = getKey(firebaseDependencies);\n  const db = await getDbPromise();\n  const tx = db.transaction(OBJECT_STORE_NAME, 'readwrite');\n  await tx.objectStore(OBJECT_STORE_NAME).put(tokenDetails, key);\n  await tx.complete;\n  return tokenDetails;\n}\n\n/** Removes record(s) from the objectStore that match the given key. */\nexport async function dbRemove(\n  firebaseDependencies: FirebaseInternalDependencies\n): Promise<void> {\n  const key = getKey(firebaseDependencies);\n  const db = await getDbPromise();\n  const tx = db.transaction(OBJECT_STORE_NAME, 'readwrite');\n  await tx.objectStore(OBJECT_STORE_NAME).delete(key);\n  await tx.complete;\n}\n\n/** Deletes the DB. Useful for tests. */\nexport async function dbDelete(): Promise<void> {\n  if (dbPromise) {\n    (await dbPromise).close();\n    await deleteDb(DATABASE_NAME);\n    dbPromise = null;\n  }\n}\n\nfunction getKey({ appConfig }: FirebaseInternalDependencies): string {\n  return appConfig.appId;\n}\n","/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { ErrorCode, ERROR_FACTORY } from '../util/errors';\nimport { DEFAULT_VAPID_KEY, ENDPOINT } from '../util/constants';\nimport { TokenDetails, SubscriptionOptions } from '../interfaces/token-details';\nimport { FirebaseInternalDependencies } from '../interfaces/internal-dependencies';\nimport { AppConfig } from '../interfaces/app-config';\n\nexport interface ApiResponse {\n  token?: string;\n  error?: { message: string };\n}\n\nexport interface ApiRequestBody {\n  web: {\n    endpoint: string;\n    p256dh: string;\n    auth: string;\n    applicationPubKey?: string;\n  };\n}\n\nexport async function requestGetToken(\n  firebaseDependencies: FirebaseInternalDependencies,\n  subscriptionOptions: SubscriptionOptions\n): Promise<string> {\n  const headers = await getHeaders(firebaseDependencies);\n  const body = getBody(subscriptionOptions);\n\n  const subscribeOptions = {\n    method: 'POST',\n    headers,\n    body: JSON.stringify(body)\n  };\n\n  let responseData: ApiResponse;\n  try {\n    const response = await fetch(\n      getEndpoint(firebaseDependencies.appConfig),\n      subscribeOptions\n    );\n    responseData = await response.json();\n  } catch (err) {\n    throw ERROR_FACTORY.create(ErrorCode.TOKEN_SUBSCRIBE_FAILED, {\n      errorInfo: err\n    });\n  }\n\n  if (responseData.error) {\n    const message = responseData.error.message;\n    throw ERROR_FACTORY.create(ErrorCode.TOKEN_SUBSCRIBE_FAILED, {\n      errorInfo: message\n    });\n  }\n\n  if (!responseData.token) {\n    throw ERROR_FACTORY.create(ErrorCode.TOKEN_SUBSCRIBE_NO_TOKEN);\n  }\n\n  return responseData.token;\n}\n\nexport async function requestUpdateToken(\n  firebaseDependencies: FirebaseInternalDependencies,\n  tokenDetails: TokenDetails\n): Promise<string> {\n  const headers = await getHeaders(firebaseDependencies);\n  const body = getBody(tokenDetails.subscriptionOptions!);\n\n  const updateOptions = {\n    method: 'PATCH',\n    headers,\n    body: JSON.stringify(body)\n  };\n\n  let responseData: ApiResponse;\n  try {\n    const response = await fetch(\n      `${getEndpoint(firebaseDependencies.appConfig)}/${tokenDetails.token}`,\n      updateOptions\n    );\n    responseData = await response.json();\n  } catch (err) {\n    throw ERROR_FACTORY.create(ErrorCode.TOKEN_UPDATE_FAILED, {\n      errorInfo: err\n    });\n  }\n\n  if (responseData.error) {\n    const message = responseData.error.message;\n    throw ERROR_FACTORY.create(ErrorCode.TOKEN_UPDATE_FAILED, {\n      errorInfo: message\n    });\n  }\n\n  if (!responseData.token) {\n    throw ERROR_FACTORY.create(ErrorCode.TOKEN_UPDATE_NO_TOKEN);\n  }\n\n  return responseData.token;\n}\n\nexport async function requestDeleteToken(\n  firebaseDependencies: FirebaseInternalDependencies,\n  token: string\n): Promise<void> {\n  const headers = await getHeaders(firebaseDependencies);\n\n  const unsubscribeOptions = {\n    method: 'DELETE',\n    headers\n  };\n\n  try {\n    const response = await fetch(\n      `${getEndpoint(firebaseDependencies.appConfig)}/${token}`,\n      unsubscribeOptions\n    );\n    const responseData: ApiResponse = await response.json();\n    if (responseData.error) {\n      const message = responseData.error.message;\n      throw ERROR_FACTORY.create(ErrorCode.TOKEN_UNSUBSCRIBE_FAILED, {\n        errorInfo: message\n      });\n    }\n  } catch (err) {\n    throw ERROR_FACTORY.create(ErrorCode.TOKEN_UNSUBSCRIBE_FAILED, {\n      errorInfo: err\n    });\n  }\n}\n\nfunction getEndpoint({ projectId }: AppConfig): string {\n  return `${ENDPOINT}/projects/${projectId!}/registrations`;\n}\n\nasync function getHeaders({\n  appConfig,\n  installations\n}: FirebaseInternalDependencies): Promise<Headers> {\n  const authToken = await installations.getToken();\n\n  return new Headers({\n    'Content-Type': 'application/json',\n    Accept: 'application/json',\n    'x-goog-api-key': appConfig.apiKey!,\n    'x-goog-firebase-installations-auth': `FIS ${authToken}`\n  });\n}\n\nfunction getBody({\n  p256dh,\n  auth,\n  endpoint,\n  vapidKey\n}: SubscriptionOptions): ApiRequestBody {\n  const body: ApiRequestBody = {\n    web: {\n      endpoint,\n      auth,\n      p256dh\n    }\n  };\n\n  if (vapidKey !== DEFAULT_VAPID_KEY) {\n    body.web.applicationPubKey = vapidKey;\n  }\n\n  return body;\n}\n","/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { dbGet, dbSet, dbRemove } from '../helpers/idb-manager';\nimport { FirebaseInternalDependencies } from '../interfaces/internal-dependencies';\nimport { TokenDetails, SubscriptionOptions } from '../interfaces/token-details';\nimport { requestUpdateToken, requestGetToken, requestDeleteToken } from './api';\nimport {\n  arrayToBase64,\n  base64ToArray\n} from '../helpers/array-base64-translator';\nimport { ERROR_FACTORY, ErrorCode } from '../util/errors';\n\n/** UpdateRegistration will be called once every week. */\nconst TOKEN_EXPIRATION_MS = 7 * 24 * 60 * 60 * 1000; // 7 days\n\nexport async function getToken(\n  firebaseDependencies: FirebaseInternalDependencies,\n  swRegistration: ServiceWorkerRegistration,\n  vapidKey: string\n): Promise<string> {\n  if (Notification.permission !== 'granted') {\n    throw ERROR_FACTORY.create(ErrorCode.PERMISSION_BLOCKED);\n  }\n\n  // If a PushSubscription exists it's returned, otherwise a new subscription\n  // is generated and returned.\n  const pushSubscription = await getPushSubscription(swRegistration, vapidKey);\n  const tokenDetails = await dbGet(firebaseDependencies);\n\n  const subscriptionOptions: SubscriptionOptions = {\n    vapidKey,\n    swScope: swRegistration.scope,\n    endpoint: pushSubscription.endpoint,\n    auth: arrayToBase64(pushSubscription.getKey('auth')!),\n    p256dh: arrayToBase64(pushSubscription.getKey('p256dh')!)\n  };\n\n  if (!tokenDetails) {\n    // No token, get a new one.\n    return getNewToken(firebaseDependencies, subscriptionOptions);\n  } else if (\n    !isTokenValid(tokenDetails.subscriptionOptions!, subscriptionOptions)\n  ) {\n    // Invalid token, get a new one.\n    try {\n      await requestDeleteToken(firebaseDependencies, tokenDetails.token);\n    } catch (e) {\n      // Suppress errors because of #2364\n      console.warn(e);\n    }\n\n    return getNewToken(firebaseDependencies, subscriptionOptions);\n  } else if (Date.now() >= tokenDetails.createTime + TOKEN_EXPIRATION_MS) {\n    // Weekly token refresh\n    return updateToken(\n      {\n        token: tokenDetails.token,\n        createTime: Date.now(),\n        subscriptionOptions\n      },\n      firebaseDependencies,\n      swRegistration\n    );\n  } else {\n    // Valid token, nothing to do.\n    return tokenDetails.token;\n  }\n}\n\n/**\n * This method deletes the token from the database, unsubscribes the token from\n * FCM, and unregisters the push subscription if it exists.\n */\nexport async function deleteToken(\n  firebaseDependencies: FirebaseInternalDependencies,\n  swRegistration: ServiceWorkerRegistration\n): Promise<boolean> {\n  const tokenDetails = await dbGet(firebaseDependencies);\n  if (tokenDetails) {\n    await requestDeleteToken(firebaseDependencies, tokenDetails.token);\n    await dbRemove(firebaseDependencies);\n  }\n\n  // Unsubscribe from the push subscription.\n  const pushSubscription = await swRegistration.pushManager.getSubscription();\n  if (pushSubscription) {\n    return pushSubscription.unsubscribe();\n  }\n\n  // If there's no SW, consider it a success.\n  return true;\n}\n\nasync function updateToken(\n  tokenDetails: TokenDetails,\n  firebaseDependencies: FirebaseInternalDependencies,\n  swRegistration: ServiceWorkerRegistration\n): Promise<string> {\n  try {\n    const updatedToken = await requestUpdateToken(\n      firebaseDependencies,\n      tokenDetails\n    );\n\n    const updatedTokenDetails: TokenDetails = {\n      ...tokenDetails,\n      token: updatedToken,\n      createTime: Date.now()\n    };\n\n    await dbSet(firebaseDependencies, updatedTokenDetails);\n    return updatedToken;\n  } catch (e) {\n    await deleteToken(firebaseDependencies, swRegistration);\n    throw e;\n  }\n}\n\nasync function getNewToken(\n  firebaseDependencies: FirebaseInternalDependencies,\n  subscriptionOptions: SubscriptionOptions\n): Promise<string> {\n  const token = await requestGetToken(\n    firebaseDependencies,\n    subscriptionOptions\n  );\n  const tokenDetails: TokenDetails = {\n    token,\n    createTime: Date.now(),\n    subscriptionOptions\n  };\n  await dbSet(firebaseDependencies, tokenDetails);\n  return tokenDetails.token;\n}\n\n/**\n * Gets a PushSubscription for the current user.\n */\nasync function getPushSubscription(\n  swRegistration: ServiceWorkerRegistration,\n  vapidKey: string\n): Promise<PushSubscription> {\n  const subscription = await swRegistration.pushManager.getSubscription();\n  if (subscription) {\n    return subscription;\n  }\n  return swRegistration.pushManager.subscribe({\n    userVisibleOnly: true,\n    // Chrome <= 75 doesn't support base64-encoded VAPID key. For backward compatibility, VAPID key\n    // submitted to pushManager#subscribe must be of type Uint8Array.\n    applicationServerKey: base64ToArray(vapidKey)\n  });\n}\n\n/**\n * Checks if the saved tokenDetails object matches the configuration provided.\n */\nfunction isTokenValid(\n  dbOptions: SubscriptionOptions,\n  currentOptions: SubscriptionOptions\n): boolean {\n  const isVapidKeyEqual = currentOptions.vapidKey === dbOptions.vapidKey;\n  const isEndpointEqual = currentOptions.endpoint === dbOptions.endpoint;\n  const isAuthEqual = currentOptions.auth === dbOptions.auth;\n  const isP256dhEqual = currentOptions.p256dh === dbOptions.p256dh;\n\n  return isVapidKeyEqual && isEndpointEqual && isAuthEqual && isP256dhEqual;\n}\n","/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { ConsoleMessageData } from '../interfaces/message-payload';\nimport { CONSOLE_CAMPAIGN_ID } from '../util/constants';\n\nexport function isConsoleMessage(data: unknown): data is ConsoleMessageData {\n  // This message has a campaign ID, meaning it was sent using the\n  // Firebase Console.\n  return typeof data === 'object' && !!data && CONSOLE_CAMPAIGN_ID in data;\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  CONSOLE_CAMPAIGN_ANALYTICS_ENABLED,\n  CONSOLE_CAMPAIGN_ID,\n  CONSOLE_CAMPAIGN_NAME,\n  CONSOLE_CAMPAIGN_TIME,\n  DEFAULT_SW_PATH,\n  DEFAULT_SW_SCOPE,\n  DEFAULT_VAPID_KEY\n} from '../util/constants';\nimport { ERROR_FACTORY, ErrorCode } from '../util/errors';\nimport { InternalMessage, MessageType } from '../interfaces/internal-message';\nimport { NextFn, Observer, Unsubscribe } from '@firebase/util';\nimport { deleteToken, getToken } from '../core/token-management';\n\nimport { ConsoleMessageData } from '../interfaces/message-payload';\nimport { FirebaseApp } from '@firebase/app-types';\nimport { FirebaseInternalDependencies } from '../interfaces/internal-dependencies';\nimport { FirebaseMessaging } from '@firebase/messaging-types';\nimport { FirebaseService } from '@firebase/app-types/private';\nimport { isConsoleMessage } from '../helpers/is-console-message';\n\nexport class WindowController implements FirebaseMessaging, FirebaseService {\n  private vapidKey: string | null = null;\n  private swRegistration?: ServiceWorkerRegistration;\n  private onMessageCallback: NextFn<object> | Observer<object> | null = null;\n\n  constructor(\n    private readonly firebaseDependencies: FirebaseInternalDependencies\n  ) {\n    navigator.serviceWorker.addEventListener('message', e =>\n      this.messageEventListener(e)\n    );\n  }\n\n  get app(): FirebaseApp {\n    return this.firebaseDependencies.app;\n  }\n\n  async getToken(): Promise<string> {\n    if (!this.vapidKey) {\n      this.vapidKey = DEFAULT_VAPID_KEY;\n    }\n\n    const swRegistration = await this.getServiceWorkerRegistration();\n\n    // Check notification permission.\n    if (Notification.permission === 'default') {\n      // The user hasn't allowed or denied notifications yet. Ask them.\n      await Notification.requestPermission();\n    }\n\n    if (Notification.permission !== 'granted') {\n      throw ERROR_FACTORY.create(ErrorCode.PERMISSION_BLOCKED);\n    }\n\n    return getToken(this.firebaseDependencies, swRegistration, this.vapidKey);\n  }\n\n  async deleteToken(): Promise<boolean> {\n    const swRegistration = await this.getServiceWorkerRegistration();\n\n    return deleteToken(this.firebaseDependencies, swRegistration);\n  }\n\n  /**\n   * Request permission if it is not currently granted.\n   *\n   * @return Resolves if the permission was granted, rejects otherwise.\n   *\n   * @deprecated Use Notification.requestPermission() instead.\n   * https://developer.mozilla.org/en-US/docs/Web/API/Notification/requestPermission\n   */\n  async requestPermission(): Promise<void> {\n    if (Notification.permission === 'granted') {\n      return;\n    }\n\n    const permissionResult = await Notification.requestPermission();\n    if (permissionResult === 'granted') {\n      return;\n    } else if (permissionResult === 'denied') {\n      throw ERROR_FACTORY.create(ErrorCode.PERMISSION_BLOCKED);\n    } else {\n      throw ERROR_FACTORY.create(ErrorCode.PERMISSION_DEFAULT);\n    }\n  }\n\n  // TODO: Deprecate this and make VAPID key a parameter in getToken.\n  usePublicVapidKey(vapidKey: string): void {\n    if (this.vapidKey !== null) {\n      throw ERROR_FACTORY.create(ErrorCode.USE_VAPID_KEY_AFTER_GET_TOKEN);\n    }\n\n    if (typeof vapidKey !== 'string' || vapidKey.length === 0) {\n      throw ERROR_FACTORY.create(ErrorCode.INVALID_VAPID_KEY);\n    }\n\n    this.vapidKey = vapidKey;\n  }\n\n  useServiceWorker(swRegistration: ServiceWorkerRegistration): void {\n    if (!(swRegistration instanceof ServiceWorkerRegistration)) {\n      throw ERROR_FACTORY.create(ErrorCode.INVALID_SW_REGISTRATION);\n    }\n\n    if (this.swRegistration) {\n      throw ERROR_FACTORY.create(ErrorCode.USE_SW_AFTER_GET_TOKEN);\n    }\n\n    this.swRegistration = swRegistration;\n  }\n\n  /**\n   * @param nextOrObserver An observer object or a function triggered on\n   * message.\n   * @return The unsubscribe function for the observer.\n   */\n  onMessage(nextOrObserver: NextFn<object> | Observer<object>): Unsubscribe {\n    this.onMessageCallback = nextOrObserver;\n\n    return () => {\n      this.onMessageCallback = null;\n    };\n  }\n\n  setBackgroundMessageHandler(): void {\n    throw ERROR_FACTORY.create(ErrorCode.AVAILABLE_IN_SW);\n  }\n\n  // Unimplemented\n  onTokenRefresh(): Unsubscribe {\n    return () => {};\n  }\n\n  /**\n   * Creates or updates the default service worker registration.\n   * @return The service worker registration to be used for the push service.\n   */\n  private async getServiceWorkerRegistration(): Promise<\n    ServiceWorkerRegistration\n  > {\n    if (!this.swRegistration) {\n      try {\n        this.swRegistration = await navigator.serviceWorker.register(\n          DEFAULT_SW_PATH,\n          {\n            scope: DEFAULT_SW_SCOPE\n          }\n        );\n\n        // The timing when browser updates sw when sw has an update is unreliable by my experiment.\n        // It leads to version conflict when the SDK upgrades to a newer version in the main page, but\n        // sw is stuck with the old version. For example, https://github.com/firebase/firebase-js-sdk/issues/2590\n        // The following line reliably updates sw if there was an update.\n        this.swRegistration.update().catch(() => {\n          /* it is non blocking and we don't care if it failed */\n        });\n      } catch (e) {\n        throw ERROR_FACTORY.create(ErrorCode.FAILED_DEFAULT_REGISTRATION, {\n          browserErrorMessage: e.message\n        });\n      }\n    }\n\n    return this.swRegistration;\n  }\n\n  private async messageEventListener(event: MessageEvent): Promise<void> {\n    if (!event.data?.firebaseMessaging) {\n      // Not a message from FCM\n      return;\n    }\n\n    const { type, payload } = (event.data as InternalMessage).firebaseMessaging;\n\n    // onMessageCallback is either a function or observer/subscriber.\n    if (this.onMessageCallback && type === MessageType.PUSH_RECEIVED) {\n      if (typeof this.onMessageCallback === 'function') {\n        this.onMessageCallback(payload);\n      } else {\n        this.onMessageCallback.next(payload);\n      }\n    }\n\n    const { data } = payload;\n    if (\n      isConsoleMessage(data) &&\n      data[CONSOLE_CAMPAIGN_ANALYTICS_ENABLED] === '1'\n    ) {\n      // Analytics is enabled on this message, so we should log it.\n      await this.logEvent(type, data);\n    }\n  }\n\n  private async logEvent(\n    messageType: MessageType,\n    data: ConsoleMessageData\n  ): Promise<void> {\n    const eventType = getEventType(messageType);\n    const analytics = await this.firebaseDependencies.analyticsProvider.get();\n    analytics.logEvent(eventType, {\n      /* eslint-disable camelcase */\n      message_id: data[CONSOLE_CAMPAIGN_ID],\n      message_name: data[CONSOLE_CAMPAIGN_NAME],\n      message_time: data[CONSOLE_CAMPAIGN_TIME],\n      message_device_time: Math.floor(Date.now() / 1000)\n      /* eslint-enable camelcase */\n    });\n  }\n}\n\nfunction getEventType(messageType: MessageType): string {\n  switch (messageType) {\n    case MessageType.NOTIFICATION_CLICKED:\n      return 'notification_open';\n    case MessageType.PUSH_RECEIVED:\n      return 'notification_foreground';\n    default:\n      throw new Error();\n  }\n}\n","/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/** Returns a promise that resolves after given time passes. */\nexport function sleep(ms: number): Promise<void> {\n  return new Promise<void>(resolve => {\n    setTimeout(resolve, ms);\n  });\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { deleteToken, getToken } from '../core/token-management';\nimport { FirebaseInternalDependencies } from '../interfaces/internal-dependencies';\nimport { FirebaseMessaging } from '@firebase/messaging-types';\nimport { ERROR_FACTORY, ErrorCode } from '../util/errors';\nimport {\n  MessagePayload,\n  NotificationDetails\n} from '../interfaces/message-payload';\nimport { FCM_MSG, DEFAULT_VAPID_KEY } from '../util/constants';\nimport { MessageType, InternalMessage } from '../interfaces/internal-message';\nimport { dbGet } from '../helpers/idb-manager';\nimport { Unsubscribe } from '@firebase/util';\nimport { sleep } from '../helpers/sleep';\nimport { FirebaseApp } from '@firebase/app-types';\nimport { isConsoleMessage } from '../helpers/is-console-message';\nimport { FirebaseService } from '@firebase/app-types/private';\n\n// Let TS know that this is a service worker\ndeclare const self: ServiceWorkerGlobalScope;\n\nexport type BgMessageHandler = (payload: MessagePayload) => unknown;\n\nexport class SwController implements FirebaseMessaging, FirebaseService {\n  private vapidKey: string | null = null;\n  private bgMessageHandler: BgMessageHandler | null = null;\n\n  constructor(\n    private readonly firebaseDependencies: FirebaseInternalDependencies\n  ) {\n    self.addEventListener('push', e => {\n      e.waitUntil(this.onPush(e));\n    });\n    self.addEventListener('pushsubscriptionchange', e => {\n      e.waitUntil(this.onSubChange(e));\n    });\n    self.addEventListener('notificationclick', e => {\n      e.waitUntil(this.onNotificationClick(e));\n    });\n  }\n\n  get app(): FirebaseApp {\n    return this.firebaseDependencies.app;\n  }\n\n  /**\n   * Calling setBackgroundMessageHandler will opt in to some specific\n   * behaviours.\n   * 1.) If a notification doesn't need to be shown due to a window already\n   * being visible, then push messages will be sent to the page.\n   * 2.) If a notification needs to be shown, and the message contains no\n   * notification data this method will be called\n   * and the promise it returns will be passed to event.waitUntil.\n   * If you do not set this callback then all push messages will let and the\n   * developer can handle them in a their own 'push' event callback\n   *\n   * @param callback The callback to be called when a push message is received\n   * and a notification must be shown. The callback will be given the data from\n   * the push message.\n   */\n  setBackgroundMessageHandler(callback: BgMessageHandler): void {\n    if (!callback || typeof callback !== 'function') {\n      throw ERROR_FACTORY.create(ErrorCode.INVALID_BG_HANDLER);\n    }\n\n    this.bgMessageHandler = callback;\n  }\n\n  // TODO: Remove getToken from SW Controller.\n  // Calling this from an old SW can cause all kinds of trouble.\n  async getToken(): Promise<string> {\n    if (!this.vapidKey) {\n      // Call getToken using the current VAPID key if there already is a token.\n      // This is needed because usePublicVapidKey was not available in SW.\n      // It will be removed when vapidKey becomes a parameter of getToken, or\n      // when getToken is removed from SW.\n      const tokenDetails = await dbGet(this.firebaseDependencies);\n      this.vapidKey =\n        tokenDetails?.subscriptionOptions?.vapidKey ?? DEFAULT_VAPID_KEY;\n    }\n\n    return getToken(\n      this.firebaseDependencies,\n      self.registration,\n      this.vapidKey\n    );\n  }\n\n  // TODO: Remove deleteToken from SW Controller.\n  // Calling this from an old SW can cause all kinds of trouble.\n  deleteToken(): Promise<boolean> {\n    return deleteToken(this.firebaseDependencies, self.registration);\n  }\n\n  requestPermission(): Promise<void> {\n    throw ERROR_FACTORY.create(ErrorCode.AVAILABLE_IN_WINDOW);\n  }\n\n  // TODO: Deprecate this and make VAPID key a parameter in getToken.\n  // TODO: Remove this together with getToken from SW Controller.\n  usePublicVapidKey(vapidKey: string): void {\n    if (this.vapidKey !== null) {\n      throw ERROR_FACTORY.create(ErrorCode.USE_VAPID_KEY_AFTER_GET_TOKEN);\n    }\n\n    if (typeof vapidKey !== 'string' || vapidKey.length === 0) {\n      throw ERROR_FACTORY.create(ErrorCode.INVALID_VAPID_KEY);\n    }\n\n    this.vapidKey = vapidKey;\n  }\n\n  useServiceWorker(): void {\n    throw ERROR_FACTORY.create(ErrorCode.AVAILABLE_IN_WINDOW);\n  }\n\n  onMessage(): Unsubscribe {\n    throw ERROR_FACTORY.create(ErrorCode.AVAILABLE_IN_WINDOW);\n  }\n\n  onTokenRefresh(): Unsubscribe {\n    throw ERROR_FACTORY.create(ErrorCode.AVAILABLE_IN_WINDOW);\n  }\n\n  /**\n   * A handler for push events that shows notifications based on the content of\n   * the payload.\n   *\n   * The payload must be a JSON-encoded Object with a `notification` key. The\n   * value of the `notification` property will be used as the NotificationOptions\n   * object passed to showNotification. Additionally, the `title` property of the\n   * notification object will be used as the title.\n   *\n   * If there is no notification data in the payload then no notification will be\n   * shown.\n   */\n  async onPush(event: PushEvent): Promise<void> {\n    const payload = getMessagePayload(event);\n    if (!payload) {\n      return;\n    }\n\n    const clientList = await getClientList();\n    if (hasVisibleClients(clientList)) {\n      // App in foreground. Send to page.\n      return sendMessageToWindowClients(clientList, payload);\n    }\n\n    const notificationDetails = getNotificationData(payload);\n    if (notificationDetails) {\n      await showNotification(notificationDetails);\n    } else if (this.bgMessageHandler) {\n      await this.bgMessageHandler(payload);\n    }\n  }\n\n  async onSubChange(event: PushSubscriptionChangeEvent): Promise<void> {\n    const { newSubscription } = event;\n    if (!newSubscription) {\n      // Subscription revoked, delete token\n      await deleteToken(this.firebaseDependencies, self.registration);\n      return;\n    }\n\n    const tokenDetails = await dbGet(this.firebaseDependencies);\n    await deleteToken(this.firebaseDependencies, self.registration);\n    await getToken(\n      this.firebaseDependencies,\n      self.registration,\n      tokenDetails?.subscriptionOptions?.vapidKey ?? DEFAULT_VAPID_KEY\n    );\n  }\n\n  async onNotificationClick(event: NotificationEvent): Promise<void> {\n    const payload: MessagePayload = event.notification?.data?.[FCM_MSG];\n    if (!payload) {\n      // Not an FCM notification, do nothing.\n      return;\n    } else if (event.action) {\n      // User clicked on an action button.\n      // This will allow devs to act on action button clicks by using a custom\n      // onNotificationClick listener that they define.\n      return;\n    }\n\n    // Prevent other listeners from receiving the event\n    event.stopImmediatePropagation();\n    event.notification.close();\n\n    const link = getLink(payload);\n    if (!link) {\n      return;\n    }\n\n    let client = await getWindowClient(link);\n    if (!client) {\n      // Unable to find window client so need to open one.\n      // This also focuses the opened client.\n      client = await self.clients.openWindow(link);\n      // Wait three seconds for the client to initialize and set up the message\n      // handler so that it can receive the message.\n      await sleep(3000);\n    } else {\n      client = await client.focus();\n    }\n\n    if (!client) {\n      // Window Client will not be returned if it's for a third party origin.\n      return;\n    }\n\n    const message = createNewMessage(MessageType.NOTIFICATION_CLICKED, payload);\n    return client.postMessage(message);\n  }\n}\n\nfunction getMessagePayload({ data }: PushEvent): MessagePayload | null {\n  if (!data) {\n    return null;\n  }\n\n  try {\n    return data.json();\n  } catch (err) {\n    // Not JSON so not an FCM message.\n    return null;\n  }\n}\n\nfunction getNotificationData(\n  payload: MessagePayload\n): NotificationDetails | undefined {\n  if (!payload || typeof payload.notification !== 'object') {\n    return;\n  }\n\n  const notificationInformation: NotificationDetails = {\n    ...payload.notification\n  };\n\n  // Put the message payload under FCM_MSG name so we can identify the\n  // notification as being an FCM notification vs a notification from\n  // somewhere else (i.e. normal web push or developer generated\n  // notification).\n  notificationInformation.data = {\n    ...payload.notification.data,\n    [FCM_MSG]: payload\n  };\n\n  return notificationInformation;\n}\n\n/**\n * @param url The URL to look for when focusing a client.\n * @return Returns an existing window client or a newly opened WindowClient.\n */\nasync function getWindowClient(url: string): Promise<WindowClient | null> {\n  // Use URL to normalize the URL when comparing to windowClients.\n  // This at least handles whether to include trailing slashes or not\n  const parsedURL = new URL(url, self.location.href);\n\n  const clientList = await getClientList();\n\n  for (const client of clientList) {\n    const parsedClientUrl = new URL(client.url, self.location.href);\n    if (parsedClientUrl.host === parsedURL.host) {\n      return client;\n    }\n  }\n\n  return null;\n}\n\n/**\n * @returns If there is currently a visible WindowClient, this method will\n * resolve to true, otherwise false.\n */\nfunction hasVisibleClients(clientList: WindowClient[]): boolean {\n  return clientList.some(\n    client =>\n      client.visibilityState === 'visible' &&\n      // Ignore chrome-extension clients as that matches the background pages\n      // of extensions, which are always considered visible for some reason.\n      !client.url.startsWith('chrome-extension://')\n  );\n}\n\n/**\n * @param payload The data from the push event that should be sent to all\n * available pages.\n * @returns Returns a promise that resolves once the message has been sent to\n * all WindowClients.\n */\nfunction sendMessageToWindowClients(\n  clientList: WindowClient[],\n  payload: MessagePayload\n): void {\n  const message = createNewMessage(MessageType.PUSH_RECEIVED, payload);\n\n  for (const client of clientList) {\n    client.postMessage(message);\n  }\n}\n\nfunction getClientList(): Promise<WindowClient[]> {\n  return self.clients.matchAll({\n    type: 'window',\n    includeUncontrolled: true\n    // TS doesn't know that \"type: 'window'\" means it'll return WindowClient[]\n  }) as Promise<WindowClient[]>;\n}\n\nfunction createNewMessage(\n  type: MessageType,\n  payload: MessagePayload\n): InternalMessage {\n  return {\n    firebaseMessaging: { type, payload }\n  };\n}\n\nfunction showNotification(details: NotificationDetails): Promise<void> {\n  const title = details.title ?? '';\n\n  const { actions } = details;\n  // Note: Firefox does not support the maxActions property.\n  // https://developer.mozilla.org/en-US/docs/Web/API/notification/maxActions\n  const { maxActions } = Notification;\n  if (actions && maxActions && actions.length > maxActions) {\n    console.warn(\n      `This browser only supports ${maxActions} actions. The remaining actions will not be displayed.`\n    );\n  }\n\n  return self.registration.showNotification(title, details);\n}\n\nfunction getLink(payload: MessagePayload): string | null {\n  // eslint-disable-next-line camelcase\n  const link = payload.fcmOptions?.link ?? payload.notification?.click_action;\n  if (link) {\n    return link;\n  }\n\n  if (isConsoleMessage(payload.data)) {\n    // Notification created in the Firebase Console. Redirect to origin.\n    return self.location.origin;\n  } else {\n    return null;\n  }\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport firebase from '@firebase/app';\nimport '@firebase/installations';\nimport {\n  _FirebaseNamespace,\n  FirebaseService\n} from '@firebase/app-types/private';\nimport { FirebaseMessaging } from '@firebase/messaging-types';\nimport {\n  Component,\n  ComponentType,\n  ComponentContainer\n} from '@firebase/component';\nimport { extractAppConfig } from './helpers/extract-app-config';\nimport { FirebaseInternalDependencies } from './interfaces/internal-dependencies';\nimport { ERROR_FACTORY, ErrorCode } from './util/errors';\nimport { WindowController } from './controllers/window-controller';\nimport { SwController } from './controllers/sw-controller';\n\nconst MESSAGING_NAME = 'messaging';\nfunction factoryMethod(\n  container: ComponentContainer\n): FirebaseService & FirebaseMessaging {\n  // Dependencies.\n  const app = container.getProvider('app').getImmediate();\n  const appConfig = extractAppConfig(app);\n  const installations = container.getProvider('installations').getImmediate();\n  const analyticsProvider = container.getProvider('analytics-internal');\n\n  const firebaseDependencies: FirebaseInternalDependencies = {\n    app,\n    appConfig,\n    installations,\n    analyticsProvider\n  };\n\n  if (!isSupported()) {\n    throw ERROR_FACTORY.create(ErrorCode.UNSUPPORTED_BROWSER);\n  }\n\n  if (self && 'ServiceWorkerGlobalScope' in self) {\n    // Running in ServiceWorker context\n    return new SwController(firebaseDependencies);\n  } else {\n    // Assume we are in the window context.\n    return new WindowController(firebaseDependencies);\n  }\n}\n\nconst NAMESPACE_EXPORTS = {\n  isSupported\n};\n\n(firebase as _FirebaseNamespace).INTERNAL.registerComponent(\n  new Component(\n    MESSAGING_NAME,\n    factoryMethod,\n    ComponentType.PUBLIC\n  ).setServiceProps(NAMESPACE_EXPORTS)\n);\n\n/**\n * Define extension behavior of `registerMessaging`\n */\ndeclare module '@firebase/app-types' {\n  interface FirebaseNamespace {\n    messaging: {\n      (app?: FirebaseApp): FirebaseMessaging;\n      isSupported(): boolean;\n    };\n  }\n  interface FirebaseApp {\n    messaging(): FirebaseMessaging;\n  }\n}\n\nfunction isSupported(): boolean {\n  if (self && 'ServiceWorkerGlobalScope' in self) {\n    // Running in ServiceWorker context\n    return isSWControllerSupported();\n  } else {\n    // Assume we are in the window context.\n    return isWindowControllerSupported();\n  }\n}\n\n/**\n * Checks to see if the required APIs exist.\n */\nfunction isWindowControllerSupported(): boolean {\n  return (\n    'indexedDB' in window &&\n    indexedDB !== null &&\n    navigator.cookieEnabled &&\n    'serviceWorker' in navigator &&\n    'PushManager' in window &&\n    'Notification' in window &&\n    'fetch' in window &&\n    ServiceWorkerRegistration.prototype.hasOwnProperty('showNotification') &&\n    PushSubscription.prototype.hasOwnProperty('getKey')\n  );\n}\n\n/**\n * Checks to see if the required APIs exist within SW Context.\n */\nfunction isSWControllerSupported(): boolean {\n  return (\n    'indexedDB' in self &&\n    indexedDB !== null &&\n    'PushManager' in self &&\n    'Notification' in self &&\n    ServiceWorkerRegistration.prototype.hasOwnProperty('showNotification') &&\n    PushSubscription.prototype.hasOwnProperty('getKey')\n  );\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}