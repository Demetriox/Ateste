{"ast":null,"code":"import * as React from 'react';\nimport { first, startWith } from 'rxjs/operators';\nimport { ObservablePromiseCache } from './requestCache';\nvar requestCache = new ObservablePromiseCache();\nexport function preloadRequest(getPromise, requestId) {\n  var request = requestCache.createDedupedRequest(getPromise, requestId);\n  return {\n    requestId: requestId,\n    request: request\n  };\n}\nexport function preloadObservable(observable$, observableId) {\n  return preloadRequest(function () {\n    return observable$.pipe(first()).toPromise();\n  }, observableId);\n}\nexport function usePreloadedRequest(preloadResult) {\n  var request = requestCache.getRequest(preloadResult.requestId);\n  if (!request.isComplete) {\n    throw request.promise;\n  }\n  if (request.error) {\n    throw request.error;\n  }\n  return request.value;\n}\nexport function useObservable(observable$, observableId, startWithValue) {\n  if (!observableId) {\n    throw new Error('cannot call useObservable without an observableId');\n  }\n  var result = preloadObservable(observable$, observableId);\n  var initialValue = startWithValue;\n  if (initialValue === undefined) {\n    initialValue = usePreloadedRequest(result);\n  }\n  var _a = React.useState(initialValue),\n    latestValue = _a[0],\n    setValue = _a[1];\n  React.useEffect(function () {\n    var subscription = observable$.pipe(startWith(initialValue)).subscribe(function (newVal) {\n      result.request.setValue(newVal);\n      setValue(newVal);\n    }, function (error) {\n      console.error('There was an error', error);\n      throw error;\n    });\n    return function () {\n      subscription.unsubscribe();\n      requestCache.removeRequest(observableId);\n    };\n  }, [observableId]);\n  return latestValue;\n}","map":{"version":3,"names":["React","first","startWith","ObservablePromiseCache","requestCache","preloadRequest","getPromise","requestId","request","createDedupedRequest","preloadObservable","observable$","observableId","pipe","toPromise","usePreloadedRequest","preloadResult","getRequest","isComplete","promise","error","value","useObservable","startWithValue","Error","result","initialValue","undefined","_a","useState","latestValue","setValue","useEffect","subscription","subscribe","newVal","console","unsubscribe","removeRequest"],"sources":["/Users/jesusdemetriocontrerascarrillo/Desktop/Atrevete/Atrevete/node_modules/reactfire/useObservable/index.js"],"sourcesContent":["import * as React from 'react';\nimport { first, startWith } from 'rxjs/operators';\nimport { ObservablePromiseCache } from './requestCache';\nvar requestCache = new ObservablePromiseCache();\nexport function preloadRequest(getPromise, requestId) {\n    var request = requestCache.createDedupedRequest(getPromise, requestId);\n    return {\n        requestId: requestId,\n        request: request\n    };\n}\nexport function preloadObservable(observable$, observableId) {\n    return preloadRequest(function () { return observable$.pipe(first()).toPromise(); }, observableId);\n}\nexport function usePreloadedRequest(preloadResult) {\n    var request = requestCache.getRequest(preloadResult.requestId);\n    if (!request.isComplete) {\n        throw request.promise;\n    }\n    if (request.error) {\n        throw request.error;\n    }\n    return request.value;\n}\nexport function useObservable(observable$, observableId, startWithValue) {\n    if (!observableId) {\n        throw new Error('cannot call useObservable without an observableId');\n    }\n    var result = preloadObservable(observable$, observableId);\n    var initialValue = startWithValue;\n    if (initialValue === undefined) {\n        initialValue = usePreloadedRequest(result);\n    }\n    var _a = React.useState(initialValue), latestValue = _a[0], setValue = _a[1];\n    React.useEffect(function () {\n        var subscription = observable$.pipe(startWith(initialValue)).subscribe(function (newVal) {\n            result.request.setValue(newVal);\n            setValue(newVal);\n        }, function (error) {\n            console.error('There was an error', error);\n            throw error;\n        });\n        return function () {\n            subscription.unsubscribe();\n            requestCache.removeRequest(observableId);\n        };\n    }, [observableId]);\n    return latestValue;\n}\n"],"mappings":"AAAA,OAAO,KAAKA,KAAK,MAAM,OAAO;AAC9B,SAASC,KAAK,EAAEC,SAAS,QAAQ,gBAAgB;AACjD,SAASC,sBAAsB,QAAQ,gBAAgB;AACvD,IAAIC,YAAY,GAAG,IAAID,sBAAsB,EAAE;AAC/C,OAAO,SAASE,cAAcA,CAACC,UAAU,EAAEC,SAAS,EAAE;EAClD,IAAIC,OAAO,GAAGJ,YAAY,CAACK,oBAAoB,CAACH,UAAU,EAAEC,SAAS,CAAC;EACtE,OAAO;IACHA,SAAS,EAAEA,SAAS;IACpBC,OAAO,EAAEA;EACb,CAAC;AACL;AACA,OAAO,SAASE,iBAAiBA,CAACC,WAAW,EAAEC,YAAY,EAAE;EACzD,OAAOP,cAAc,CAAC,YAAY;IAAE,OAAOM,WAAW,CAACE,IAAI,CAACZ,KAAK,EAAE,CAAC,CAACa,SAAS,EAAE;EAAE,CAAC,EAAEF,YAAY,CAAC;AACtG;AACA,OAAO,SAASG,mBAAmBA,CAACC,aAAa,EAAE;EAC/C,IAAIR,OAAO,GAAGJ,YAAY,CAACa,UAAU,CAACD,aAAa,CAACT,SAAS,CAAC;EAC9D,IAAI,CAACC,OAAO,CAACU,UAAU,EAAE;IACrB,MAAMV,OAAO,CAACW,OAAO;EACzB;EACA,IAAIX,OAAO,CAACY,KAAK,EAAE;IACf,MAAMZ,OAAO,CAACY,KAAK;EACvB;EACA,OAAOZ,OAAO,CAACa,KAAK;AACxB;AACA,OAAO,SAASC,aAAaA,CAACX,WAAW,EAAEC,YAAY,EAAEW,cAAc,EAAE;EACrE,IAAI,CAACX,YAAY,EAAE;IACf,MAAM,IAAIY,KAAK,CAAC,mDAAmD,CAAC;EACxE;EACA,IAAIC,MAAM,GAAGf,iBAAiB,CAACC,WAAW,EAAEC,YAAY,CAAC;EACzD,IAAIc,YAAY,GAAGH,cAAc;EACjC,IAAIG,YAAY,KAAKC,SAAS,EAAE;IAC5BD,YAAY,GAAGX,mBAAmB,CAACU,MAAM,CAAC;EAC9C;EACA,IAAIG,EAAE,GAAG5B,KAAK,CAAC6B,QAAQ,CAACH,YAAY,CAAC;IAAEI,WAAW,GAAGF,EAAE,CAAC,CAAC,CAAC;IAAEG,QAAQ,GAAGH,EAAE,CAAC,CAAC,CAAC;EAC5E5B,KAAK,CAACgC,SAAS,CAAC,YAAY;IACxB,IAAIC,YAAY,GAAGtB,WAAW,CAACE,IAAI,CAACX,SAAS,CAACwB,YAAY,CAAC,CAAC,CAACQ,SAAS,CAAC,UAAUC,MAAM,EAAE;MACrFV,MAAM,CAACjB,OAAO,CAACuB,QAAQ,CAACI,MAAM,CAAC;MAC/BJ,QAAQ,CAACI,MAAM,CAAC;IACpB,CAAC,EAAE,UAAUf,KAAK,EAAE;MAChBgB,OAAO,CAAChB,KAAK,CAAC,oBAAoB,EAAEA,KAAK,CAAC;MAC1C,MAAMA,KAAK;IACf,CAAC,CAAC;IACF,OAAO,YAAY;MACfa,YAAY,CAACI,WAAW,EAAE;MAC1BjC,YAAY,CAACkC,aAAa,CAAC1B,YAAY,CAAC;IAC5C,CAAC;EACL,CAAC,EAAE,CAACA,YAAY,CAAC,CAAC;EAClB,OAAOkB,WAAW;AACtB"},"metadata":{},"sourceType":"module"}